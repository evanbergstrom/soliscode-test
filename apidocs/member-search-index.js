memberSearchIndex = [{"p":"org.soliscode.test.breakable","c":"AbstractBreakable","l":"AbstractBreakable()","u":"%3Cinit%3E()"},{"p":"org.soliscode.test.breakable","c":"AbstractBreakable","l":"AbstractBreakable(AbstractBreakable)","u":"%3Cinit%3E(org.soliscode.test.breakable.AbstractBreakable)"},{"p":"org.soliscode.test.breakable","c":"AbstractBreakable","l":"AbstractBreakable(Collection<Break>)","u":"%3Cinit%3E(java.util.Collection)"},{"p":"org.soliscode.test.breakable","c":"BreakableCollection.AbstractBuilder","l":"AbstractBuilder()","u":"%3Cinit%3E()"},{"p":"org.soliscode.test.breakable","c":"BreakableIterable.AbstractBuilder","l":"AbstractBuilder()","u":"%3Cinit%3E()"},{"p":"org.soliscode.test.breakable","c":"BreakableCollection.AbstractBuilder","l":"AbstractBuilder(BreakableCollection.AbstractBuilder<B, C, E>)","u":"%3Cinit%3E(org.soliscode.test.breakable.BreakableCollection.AbstractBuilder)"},{"p":"org.soliscode.test.breakable","c":"BreakableIterable.AbstractBuilder","l":"AbstractBuilder(BreakableIterable.AbstractBuilder<B, C, E>)","u":"%3Cinit%3E(org.soliscode.test.breakable.BreakableIterable.AbstractBuilder)"},{"p":"org.soliscode.test.breakable","c":"BreakableCollection.AbstractBuilder","l":"AbstractBuilder(Collection<E>)","u":"%3Cinit%3E(java.util.Collection)"},{"p":"org.soliscode.test.breakable","c":"BreakableIterable.AbstractBuilder","l":"AbstractBuilder(Collection<E>)","u":"%3Cinit%3E(java.util.Collection)"},{"p":"org.soliscode.test","c":"AbstractTest","l":"AbstractTest()","u":"%3Cinit%3E()"},{"p":"org.soliscode.test.util","c":"CollectingConsumer","l":"accept(E)"},{"p":"org.soliscode.test.assertions.actions","c":"AssertConsumeExactly","l":"accept(T)"},{"p":"org.soliscode.test.assertions.actions","c":"AssertConsumeNone","l":"accept(T)"},{"p":"org.soliscode.test.assertions.actions","c":"AssertConsumeOnly","l":"accept(T)"},{"p":"org.soliscode.test.util","c":"CountingConsumer","l":"accept(T)"},{"p":"org.soliscode.test.assertions.actions","c":"AssertConsumeCount","l":"accept(T)"},{"p":"org.soliscode.test.contract","c":"CollectionMethods","l":"Add"},{"p":"org.soliscode.test.breakable","c":"BreakableCollection","l":"ADD_ALL_ALWAYS_RETURNS_FALSE"},{"p":"org.soliscode.test.breakable","c":"BreakableCollection","l":"ADD_ALL_ALWAYS_RETURNS_OPPOSITE_VALUE"},{"p":"org.soliscode.test.breakable","c":"BreakableCollection","l":"ADD_ALL_ALWAYS_RETURNS_TRUE"},{"p":"org.soliscode.test.breakable","c":"BreakableList","l":"ADD_ALL_AT_INDEX_ADDS_TO_THE_END"},{"p":"org.soliscode.test.breakable","c":"BreakableList","l":"ADD_ALL_AT_INDEX_ALWAYS_RETURNS_FALSE"},{"p":"org.soliscode.test.breakable","c":"BreakableList","l":"ADD_ALL_AT_INDEX_ALWAYS_RETURNS_OPPOSITE_VALUE"},{"p":"org.soliscode.test.breakable","c":"BreakableList","l":"ADD_ALL_AT_INDEX_ALWAYS_RETURNS_TRUE"},{"p":"org.soliscode.test.breakable","c":"BreakableList","l":"ADD_ALL_AT_INDEX_DOES_NOT_ADD_ANY_ELEMENTS"},{"p":"org.soliscode.test.breakable","c":"BreakableList","l":"ADD_ALL_AT_INDEX_THROWS_WRONG_EXCEPTION_IF_NOT_SUPPORTED"},{"p":"org.soliscode.test.breakable","c":"BreakableList","l":"ADD_ALL_AT_INDEX_THROWS_WRONG_EXCEPTION_ON_BAD_INDEX"},{"p":"org.soliscode.test.breakable","c":"BreakableList","l":"ADD_ALL_AT_INDEX_THROWS_WRONG_EXCEPTION_WHEN_ARGUMENT_IS_NULL"},{"p":"org.soliscode.test.breakable","c":"BreakableCollection","l":"ADD_ALL_DOES_NOT_ADD_ANY_ELEMENTS"},{"p":"org.soliscode.test.breakable","c":"BreakableCollection","l":"ADD_ALL_SKIPS_FIRST_ELEMENT"},{"p":"org.soliscode.test.breakable","c":"BreakableCollection","l":"ADD_ALL_SKIPS_LAST_ELEMENT"},{"p":"org.soliscode.test.breakable","c":"BreakableCollection","l":"ADD_ALWAYS_RETURNS_FALSE"},{"p":"org.soliscode.test.breakable","c":"BreakableCollection","l":"ADD_ALWAYS_RETURNS_OPPOSITE_VALUE"},{"p":"org.soliscode.test.breakable","c":"BreakableCollection","l":"ADD_ALWAYS_RETURNS_TRUE"},{"p":"org.soliscode.test.breakable","c":"BreakableList","l":"ADD_AT_INDEX_ADDS_AT_NEXT_POSITION"},{"p":"org.soliscode.test.breakable","c":"BreakableList","l":"ADD_AT_INDEX_ADDS_AT_PREVIOUS_POSITION"},{"p":"org.soliscode.test.breakable","c":"BreakableList","l":"ADD_AT_INDEX_DOES_NOT_ADD_THE_ELEMENT"},{"p":"org.soliscode.test.breakable","c":"BreakableList","l":"ADD_AT_INDEX_THROWS_WRONG_EXCEPTION_ON_BAD_INDEX"},{"p":"org.soliscode.test.breakable","c":"BreakableCollection","l":"ADD_DOES_NOT_ADD_ELEMENT"},{"p":"org.soliscode.test.breakable","c":"BreakableSequencedCollection","l":"ADD_FIRST_ADDS_TO_END"},{"p":"org.soliscode.test.breakable","c":"BreakableSequencedCollection","l":"ADD_FIRST_DOES_NOT_ADD_ELEMENT"},{"p":"org.soliscode.test.breakable","c":"BreakableSequencedCollection","l":"ADD_LAST_ADDS_TO_FRONT"},{"p":"org.soliscode.test.breakable","c":"BreakableSequencedCollection","l":"ADD_LAST_DOES_NOT_ADD_ELEMENT"},{"p":"org.soliscode.test.breakable","c":"BreakableCollection","l":"add(E)"},{"p":"org.soliscode.test.interfaces","c":"CollectionOnly","l":"add(E)"},{"p":"org.soliscode.test.util","c":"IdentitySet","l":"add(E)"},{"p":"org.soliscode.test.breakable","c":"BreakableList","l":"add(int, E)","u":"add(int,E)"},{"p":"org.soliscode.test.contract","c":"CollectionMethods","l":"AddAll"},{"p":"org.soliscode.test.breakable","c":"BreakableCollection","l":"addAll(Collection<? extends E>)","u":"addAll(java.util.Collection)"},{"p":"org.soliscode.test.interfaces","c":"CollectionOnly","l":"addAll(Collection<? extends E>)","u":"addAll(java.util.Collection)"},{"p":"org.soliscode.test.breakable","c":"BreakableList","l":"addAll(int, Collection<? extends E>)","u":"addAll(int,java.util.Collection)"},{"p":"org.soliscode.test.contract","c":"CollectionMethods","l":"AddAllAtIndex"},{"p":"org.soliscode.test.contract","c":"CollectionMethods","l":"AddAtIndex"},{"p":"org.soliscode.test.breakable","c":"BreakableIterable.AbstractBuilder","l":"addBreak(Break)","u":"addBreak(org.soliscode.test.breakable.Break)"},{"p":"org.soliscode.test.breakable","c":"AbstractBreakable","l":"addBreaks(Collection<Break>)","u":"addBreaks(java.util.Collection)"},{"p":"org.soliscode.test.breakable","c":"Breakable","l":"addBreaks(Collection<Break>)","u":"addBreaks(java.util.Collection)"},{"p":"org.soliscode.test.breakable","c":"BreakableIterable.AbstractBuilder","l":"addElements(E...)"},{"p":"org.soliscode.test.breakable","c":"BreakableIterable.AbstractBuilder","l":"addElements(Iterable<E>)","u":"addElements(java.lang.Iterable)"},{"p":"org.soliscode.test.contract","c":"CollectionMethods","l":"AddFirst"},{"p":"org.soliscode.test.breakable","c":"BreakableSequencedCollection","l":"addFirst(E)"},{"p":"org.soliscode.test.contract.sequenced","c":"AddFirstContract","l":"addFirstWithDuplicateValue()"},{"p":"org.soliscode.test.contract","c":"CollectionMethods","l":"AddLast"},{"p":"org.soliscode.test.breakable","c":"BreakableSequencedCollection","l":"addLast(E)"},{"p":"org.soliscode.test.contract.sequenced","c":"AddLastContract","l":"addLastWithDuplicateValue()"},{"p":"org.soliscode.test.contract.collection","c":"AddContract","l":"addWithDuplicateValue()"},{"p":"org.soliscode.test.util","c":"AlwaysThrows","l":"AlwaysThrows()","u":"%3Cinit%3E()"},{"p":"org.soliscode.test.util","c":"AlwaysThrows","l":"AlwaysThrows(Supplier<RuntimeException>)","u":"%3Cinit%3E(java.util.function.Supplier)"},{"p":"org.soliscode.test.util","c":"IterableTestOps","l":"asCollection(Iterable<E>)","u":"asCollection(java.lang.Iterable)"},{"p":"org.soliscode.test.assertions.collection","c":"IterableAssertion","l":"asIterable(E[])"},{"p":"org.soliscode.test.util","c":"IterableTestOps","l":"asList(Iterable<E>)","u":"asList(java.lang.Iterable)"},{"p":"org.soliscode.test.assertions.actions","c":"AssertAction","l":"assertCheck()"},{"p":"org.soliscode.test.assertions.actions","c":"AssertConsumeCount","l":"assertCheck()"},{"p":"org.soliscode.test.assertions.actions","c":"AssertConsumeExactly","l":"assertCheck()"},{"p":"org.soliscode.test.assertions.actions","c":"AssertConsumeCount","l":"AssertConsumeCount(int)","u":"%3Cinit%3E(int)"},{"p":"org.soliscode.test.assertions.actions","c":"AssertConsumeCount","l":"AssertConsumeCount(int, String)","u":"%3Cinit%3E(int,java.lang.String)"},{"p":"org.soliscode.test.assertions.actions","c":"AssertConsumeCount","l":"AssertConsumeCount(int, Supplier<String>)","u":"%3Cinit%3E(int,java.util.function.Supplier)"},{"p":"org.soliscode.test.assertions.actions","c":"AssertConsumeExactly","l":"AssertConsumeExactly(Iterable<T>)","u":"%3Cinit%3E(java.lang.Iterable)"},{"p":"org.soliscode.test.assertions.actions","c":"AssertConsumeExactly","l":"AssertConsumeExactly(Iterable<T>, String)","u":"%3Cinit%3E(java.lang.Iterable,java.lang.String)"},{"p":"org.soliscode.test.assertions.actions","c":"AssertConsumeExactly","l":"AssertConsumeExactly(Iterable<T>, Supplier<String>)","u":"%3Cinit%3E(java.lang.Iterable,java.util.function.Supplier)"},{"p":"org.soliscode.test.assertions.actions","c":"AssertActions","l":"assertConsumeNone()"},{"p":"org.soliscode.test.assertions.actions","c":"AssertConsumeNone","l":"AssertConsumeNone()","u":"%3Cinit%3E()"},{"p":"org.soliscode.test.assertions.actions","c":"AssertActions","l":"assertConsumeNone(String)","u":"assertConsumeNone(java.lang.String)"},{"p":"org.soliscode.test.assertions.actions","c":"AssertConsumeNone","l":"AssertConsumeNone(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"org.soliscode.test.assertions.actions","c":"AssertActions","l":"assertConsumeNone(Supplier<String>)","u":"assertConsumeNone(java.util.function.Supplier)"},{"p":"org.soliscode.test.assertions.actions","c":"AssertConsumeNone","l":"AssertConsumeNone(Supplier<String>)","u":"%3Cinit%3E(java.util.function.Supplier)"},{"p":"org.soliscode.test.assertions.actions","c":"AssertConsumeOnly","l":"AssertConsumeOnly(Iterable<T>)","u":"%3Cinit%3E(java.lang.Iterable)"},{"p":"org.soliscode.test.assertions.actions","c":"AssertConsumeOnly","l":"AssertConsumeOnly(Iterable<T>, String)","u":"%3Cinit%3E(java.lang.Iterable,java.lang.String)"},{"p":"org.soliscode.test.assertions.actions","c":"AssertConsumeOnly","l":"AssertConsumeOnly(Iterable<T>, Supplier<String>)","u":"%3Cinit%3E(java.lang.Iterable,java.util.function.Supplier)"},{"p":"org.soliscode.test.assertions.collection","c":"CollectionAssertions","l":"assertContains(Object, Iterable<?>)","u":"assertContains(java.lang.Object,java.lang.Iterable)"},{"p":"org.soliscode.test.assertions.collection","c":"CollectionAssertions","l":"assertContains(Object, Iterable<?>, String)","u":"assertContains(java.lang.Object,java.lang.Iterable,java.lang.String)"},{"p":"org.soliscode.test.assertions.collection","c":"CollectionAssertions","l":"assertContains(Object, Iterable<?>, Supplier<String>)","u":"assertContains(java.lang.Object,java.lang.Iterable,java.util.function.Supplier)"},{"p":"org.soliscode.test.assertions.collection","c":"CollectionAssertions","l":"assertContainsAll(Iterable<?>, Iterable<?>)","u":"assertContainsAll(java.lang.Iterable,java.lang.Iterable)"},{"p":"org.soliscode.test.assertions.collection","c":"CollectionAssertions","l":"assertContainsAll(Iterable<?>, Iterable<?>, String)","u":"assertContainsAll(java.lang.Iterable,java.lang.Iterable,java.lang.String)"},{"p":"org.soliscode.test.assertions.collection","c":"CollectionAssertions","l":"assertContainsAll(Iterable<?>, Iterable<?>, Supplier<String>)","u":"assertContainsAll(java.lang.Iterable,java.lang.Iterable,java.util.function.Supplier)"},{"p":"org.soliscode.test.assertions.collection","c":"CollectionAssertions","l":"assertContainsAllByIdentity(Iterable<?>, Iterable<?>)","u":"assertContainsAllByIdentity(java.lang.Iterable,java.lang.Iterable)"},{"p":"org.soliscode.test.assertions.collection","c":"CollectionAssertions","l":"assertContainsAllByIdentity(Iterable<?>, Iterable<?>, String)","u":"assertContainsAllByIdentity(java.lang.Iterable,java.lang.Iterable,java.lang.String)"},{"p":"org.soliscode.test.assertions.collection","c":"CollectionAssertions","l":"assertContainsAllByIdentity(Iterable<?>, Iterable<?>, Supplier<String>)","u":"assertContainsAllByIdentity(java.lang.Iterable,java.lang.Iterable,java.util.function.Supplier)"},{"p":"org.soliscode.test.assertions.collection","c":"CollectionAssertions","l":"assertContainsNone(Iterable<?>, Iterable<?>)","u":"assertContainsNone(java.lang.Iterable,java.lang.Iterable)"},{"p":"org.soliscode.test.assertions.collection","c":"CollectionAssertions","l":"assertContainsNone(Iterable<?>, Iterable<?>, String)","u":"assertContainsNone(java.lang.Iterable,java.lang.Iterable,java.lang.String)"},{"p":"org.soliscode.test.assertions.collection","c":"CollectionAssertions","l":"assertContainsNone(Iterable<?>, Iterable<?>, Supplier<String>)","u":"assertContainsNone(java.lang.Iterable,java.lang.Iterable,java.util.function.Supplier)"},{"p":"org.soliscode.test.assertions.collection","c":"AssertContainsNoneByIdentity","l":"assertContainsNoneByIdentity(Iterable<?>, Iterable<?>)","u":"assertContainsNoneByIdentity(java.lang.Iterable,java.lang.Iterable)"},{"p":"org.soliscode.test.assertions.collection","c":"AssertContainsNoneByIdentity","l":"assertContainsNoneByIdentity(Iterable<?>, Iterable<?>, String)","u":"assertContainsNoneByIdentity(java.lang.Iterable,java.lang.Iterable,java.lang.String)"},{"p":"org.soliscode.test.assertions.collection","c":"AssertContainsNoneByIdentity","l":"assertContainsNoneByIdentity(Iterable<?>, Iterable<?>, Supplier<String>)","u":"assertContainsNoneByIdentity(java.lang.Iterable,java.lang.Iterable,java.util.function.Supplier)"},{"p":"org.soliscode.test.assertions.collection","c":"AssertContainsSame","l":"assertContainsSame(Iterable<?>, Iterable<?>)","u":"assertContainsSame(java.lang.Iterable,java.lang.Iterable)"},{"p":"org.soliscode.test.assertions.collection","c":"CollectionAssertions","l":"assertContainsSame(Iterable<?>, Iterable<?>)","u":"assertContainsSame(java.lang.Iterable,java.lang.Iterable)"},{"p":"org.soliscode.test.assertions.collection","c":"AssertContainsSame","l":"assertContainsSame(Iterable<?>, Iterable<?>, String)","u":"assertContainsSame(java.lang.Iterable,java.lang.Iterable,java.lang.String)"},{"p":"org.soliscode.test.assertions.collection","c":"CollectionAssertions","l":"assertContainsSame(Iterable<?>, Iterable<?>, String)","u":"assertContainsSame(java.lang.Iterable,java.lang.Iterable,java.lang.String)"},{"p":"org.soliscode.test.assertions.collection","c":"AssertContainsSame","l":"assertContainsSame(Iterable<?>, Iterable<?>, Supplier<String>)","u":"assertContainsSame(java.lang.Iterable,java.lang.Iterable,java.util.function.Supplier)"},{"p":"org.soliscode.test.assertions.collection","c":"CollectionAssertions","l":"assertContainsSame(Iterable<?>, Iterable<?>, Supplier<String>)","u":"assertContainsSame(java.lang.Iterable,java.lang.Iterable,java.util.function.Supplier)"},{"p":"org.soliscode.test.assertions.collection","c":"AssertContainsSameByIdentity","l":"assertContainsSameByIdentity(Iterable<?>, Iterable<?>)","u":"assertContainsSameByIdentity(java.lang.Iterable,java.lang.Iterable)"},{"p":"org.soliscode.test.assertions.collection","c":"CollectionAssertions","l":"assertContainsSameByIdentity(Iterable<?>, Iterable<?>)","u":"assertContainsSameByIdentity(java.lang.Iterable,java.lang.Iterable)"},{"p":"org.soliscode.test.assertions.collection","c":"AssertContainsSameByIdentity","l":"assertContainsSameByIdentity(Iterable<?>, Iterable<?>, String)","u":"assertContainsSameByIdentity(java.lang.Iterable,java.lang.Iterable,java.lang.String)"},{"p":"org.soliscode.test.assertions.collection","c":"CollectionAssertions","l":"assertContainsSameByIdentity(Iterable<?>, Iterable<?>, String)","u":"assertContainsSameByIdentity(java.lang.Iterable,java.lang.Iterable,java.lang.String)"},{"p":"org.soliscode.test.assertions.collection","c":"AssertContainsSameByIdentity","l":"assertContainsSameByIdentity(Iterable<?>, Iterable<?>, Supplier<String>)","u":"assertContainsSameByIdentity(java.lang.Iterable,java.lang.Iterable,java.util.function.Supplier)"},{"p":"org.soliscode.test.assertions.collection","c":"CollectionAssertions","l":"assertContainsSameByIdentity(Iterable<?>, Iterable<?>, Supplier<String>)","u":"assertContainsSameByIdentity(java.lang.Iterable,java.lang.Iterable,java.util.function.Supplier)"},{"p":"org.soliscode.test.assertions.collection","c":"CollectionAssertions","l":"assertDoesNotContain(Object, Iterable<?>)","u":"assertDoesNotContain(java.lang.Object,java.lang.Iterable)"},{"p":"org.soliscode.test.assertions.collection","c":"CollectionAssertions","l":"assertDoesNotContain(Object, Iterable<?>, String)","u":"assertDoesNotContain(java.lang.Object,java.lang.Iterable,java.lang.String)"},{"p":"org.soliscode.test.assertions.collection","c":"CollectionAssertions","l":"assertDoesNotContain(Object, Iterable<?>, Supplier<String>)","u":"assertDoesNotContain(java.lang.Object,java.lang.Iterable,java.util.function.Supplier)"},{"p":"org.soliscode.test.assertions.collection","c":"CollectionAssertions","l":"assertEquals(E[], Iterable<?>)","u":"assertEquals(E[],java.lang.Iterable)"},{"p":"org.soliscode.test.assertions.collection","c":"CollectionAssertions","l":"assertEquals(E[], Iterable<?>, String)","u":"assertEquals(E[],java.lang.Iterable,java.lang.String)"},{"p":"org.soliscode.test.assertions.collection","c":"CollectionAssertions","l":"assertEquals(E[], Iterable<?>, Supplier<String>)","u":"assertEquals(E[],java.lang.Iterable,java.util.function.Supplier)"},{"p":"org.soliscode.test.assertions.collection","c":"CollectionAssertions","l":"assertEquals(Iterable<?>, E[])","u":"assertEquals(java.lang.Iterable,E[])"},{"p":"org.soliscode.test.assertions.collection","c":"CollectionAssertions","l":"assertEquals(Iterable<?>, E[], String)","u":"assertEquals(java.lang.Iterable,E[],java.lang.String)"},{"p":"org.soliscode.test.assertions.collection","c":"CollectionAssertions","l":"assertEquals(Iterable<?>, E[], Supplier<String>)","u":"assertEquals(java.lang.Iterable,E[],java.util.function.Supplier)"},{"p":"org.soliscode.test.assertions.collection","c":"CollectionAssertions","l":"assertEquals(Iterable<?>, Iterable<?>)","u":"assertEquals(java.lang.Iterable,java.lang.Iterable)"},{"p":"org.soliscode.test.assertions.collection","c":"CollectionAssertions","l":"assertEquals(Iterable<?>, Iterable<?>, String)","u":"assertEquals(java.lang.Iterable,java.lang.Iterable,java.lang.String)"},{"p":"org.soliscode.test.assertions.collection","c":"CollectionAssertions","l":"assertEquals(Iterable<?>, Iterable<?>, Supplier<String>)","u":"assertEquals(java.lang.Iterable,java.lang.Iterable,java.util.function.Supplier)"},{"p":"org.soliscode.test.assertions.collection","c":"CollectionAssertions","l":"assertEqualsByIdentity(E[], Iterable<?>)","u":"assertEqualsByIdentity(E[],java.lang.Iterable)"},{"p":"org.soliscode.test.assertions.collection","c":"CollectionAssertions","l":"assertEqualsByIdentity(E[], Iterable<?>, String)","u":"assertEqualsByIdentity(E[],java.lang.Iterable,java.lang.String)"},{"p":"org.soliscode.test.assertions.collection","c":"CollectionAssertions","l":"assertEqualsByIdentity(E[], Iterable<?>, Supplier<String>)","u":"assertEqualsByIdentity(E[],java.lang.Iterable,java.util.function.Supplier)"},{"p":"org.soliscode.test.assertions.collection","c":"CollectionAssertions","l":"assertEqualsByIdentity(Iterable<?>, E[])","u":"assertEqualsByIdentity(java.lang.Iterable,E[])"},{"p":"org.soliscode.test.assertions.collection","c":"CollectionAssertions","l":"assertEqualsByIdentity(Iterable<?>, E[], String)","u":"assertEqualsByIdentity(java.lang.Iterable,E[],java.lang.String)"},{"p":"org.soliscode.test.assertions.collection","c":"CollectionAssertions","l":"assertEqualsByIdentity(Iterable<?>, E[], Supplier<String>)","u":"assertEqualsByIdentity(java.lang.Iterable,E[],java.util.function.Supplier)"},{"p":"org.soliscode.test.assertions.collection","c":"CollectionAssertions","l":"assertEqualsByIdentity(Iterable<?>, Iterable<?>)","u":"assertEqualsByIdentity(java.lang.Iterable,java.lang.Iterable)"},{"p":"org.soliscode.test.assertions.collection","c":"CollectionAssertions","l":"assertEqualsByIdentity(Iterable<?>, Iterable<?>, String)","u":"assertEqualsByIdentity(java.lang.Iterable,java.lang.Iterable,java.lang.String)"},{"p":"org.soliscode.test.assertions.collection","c":"CollectionAssertions","l":"assertEqualsByIdentity(Iterable<?>, Iterable<?>, Supplier<String>)","u":"assertEqualsByIdentity(java.lang.Iterable,java.lang.Iterable,java.util.function.Supplier)"},{"p":"org.soliscode.test.assertions","c":"Assertions","l":"assertImplementsOnly(Class<?>, Object)","u":"assertImplementsOnly(java.lang.Class,java.lang.Object)"},{"p":"org.soliscode.test.assertions","c":"Assertions","l":"assertImplementsOnly(Collection<Class<?>>, Object)","u":"assertImplementsOnly(java.util.Collection,java.lang.Object)"},{"p":"org.soliscode.test.assertions","c":"Assertions","l":"assertInstanceOf(Class<T>, Object, Supplier<String>)","u":"assertInstanceOf(java.lang.Class,java.lang.Object,java.util.function.Supplier)"},{"p":"org.soliscode.test.assertions","c":"Assertions","l":"assertInstanceOfOnly(Class<?>, Object, String)","u":"assertInstanceOfOnly(java.lang.Class,java.lang.Object,java.lang.String)"},{"p":"org.soliscode.test.assertions","c":"Assertions","l":"assertInstanceOfOnly(Class<?>, Object, Supplier<String>)","u":"assertInstanceOfOnly(java.lang.Class,java.lang.Object,java.util.function.Supplier)"},{"p":"org.soliscode.test.assertions","c":"Assertions","l":"assertInstanceOfOnly(Collection<Class<?>>, Object, String)","u":"assertInstanceOfOnly(java.util.Collection,java.lang.Object,java.lang.String)"},{"p":"org.soliscode.test.assertions","c":"Assertions","l":"assertInstanceOfOnly(Collection<Class<?>>, Object, Supplier<String>)","u":"assertInstanceOfOnly(java.util.Collection,java.lang.Object,java.util.function.Supplier)"},{"p":"org.soliscode.test.assertions.collection","c":"AssertIsEmpty","l":"assertIsEmpty(Iterable<?>)","u":"assertIsEmpty(java.lang.Iterable)"},{"p":"org.soliscode.test.assertions.collection","c":"CollectionAssertions","l":"assertIsEmpty(Iterable<?>)","u":"assertIsEmpty(java.lang.Iterable)"},{"p":"org.soliscode.test.assertions.collection","c":"AssertIsEmpty","l":"assertIsEmpty(Iterable<?>, String)","u":"assertIsEmpty(java.lang.Iterable,java.lang.String)"},{"p":"org.soliscode.test.assertions.collection","c":"CollectionAssertions","l":"assertIsEmpty(Iterable<?>, String)","u":"assertIsEmpty(java.lang.Iterable,java.lang.String)"},{"p":"org.soliscode.test.assertions.collection","c":"AssertIsEmpty","l":"assertIsEmpty(Iterable<?>, Supplier<String>)","u":"assertIsEmpty(java.lang.Iterable,java.util.function.Supplier)"},{"p":"org.soliscode.test.assertions.collection","c":"CollectionAssertions","l":"assertIsEmpty(Iterable<?>, Supplier<String>)","u":"assertIsEmpty(java.lang.Iterable,java.util.function.Supplier)"},{"p":"org.soliscode.test.assertions.collection","c":"IterableAssertion","l":"assertIterablesNotNull(Object, Object)","u":"assertIterablesNotNull(java.lang.Object,java.lang.Object)"},{"p":"org.soliscode.test.assertions.collection","c":"IterableAssertion","l":"assertIterablesNotNull(Object, Object, Object)","u":"assertIterablesNotNull(java.lang.Object,java.lang.Object,java.lang.Object)"},{"p":"org.soliscode.test.assertions","c":"ArrayAssertions","l":"assertLengthEquals(int, Object[])","u":"assertLengthEquals(int,java.lang.Object[])"},{"p":"org.soliscode.test.assertions","c":"Assertions","l":"assertLessThan(T, T)","u":"assertLessThan(T,T)"},{"p":"org.soliscode.test.assertions","c":"AssertLessThan","l":"assertLessThan(T, T)","u":"assertLessThan(T,T)"},{"p":"org.soliscode.test.assertions","c":"Assertions","l":"assertLessThan(T, T, String)","u":"assertLessThan(T,T,java.lang.String)"},{"p":"org.soliscode.test.assertions","c":"AssertLessThan","l":"assertLessThan(T, T, String)","u":"assertLessThan(T,T,java.lang.String)"},{"p":"org.soliscode.test.assertions","c":"Assertions","l":"assertLessThan(T, T, Supplier<String>)","u":"assertLessThan(T,T,java.util.function.Supplier)"},{"p":"org.soliscode.test.assertions","c":"AssertLessThan","l":"assertLessThan(T, T, Supplier<String>)","u":"assertLessThan(T,T,java.util.function.Supplier)"},{"p":"org.soliscode.test.assertions","c":"Assertions","l":"assertNotInstanceOf(Class<T>, Object)","u":"assertNotInstanceOf(java.lang.Class,java.lang.Object)"},{"p":"org.soliscode.test.assertions","c":"Assertions","l":"assertNotInstanceOf(Class<T>, Object, String)","u":"assertNotInstanceOf(java.lang.Class,java.lang.Object,java.lang.String)"},{"p":"org.soliscode.test.assertions.collection","c":"AssertSameSize","l":"assertSameSize(Iterable<?>, Iterable<?>)","u":"assertSameSize(java.lang.Iterable,java.lang.Iterable)"},{"p":"org.soliscode.test.assertions.collection","c":"CollectionAssertions","l":"assertSameSize(Iterable<?>, Iterable<?>)","u":"assertSameSize(java.lang.Iterable,java.lang.Iterable)"},{"p":"org.soliscode.test.assertions.collection","c":"AssertSameSize","l":"assertSameSize(Iterable<?>, Iterable<?>, String)","u":"assertSameSize(java.lang.Iterable,java.lang.Iterable,java.lang.String)"},{"p":"org.soliscode.test.assertions.collection","c":"CollectionAssertions","l":"assertSameSize(Iterable<?>, Iterable<?>, String)","u":"assertSameSize(java.lang.Iterable,java.lang.Iterable,java.lang.String)"},{"p":"org.soliscode.test.assertions.collection","c":"AssertSameSize","l":"assertSameSize(Iterable<?>, Iterable<?>, Supplier<String>)","u":"assertSameSize(java.lang.Iterable,java.lang.Iterable,java.util.function.Supplier)"},{"p":"org.soliscode.test.assertions.collection","c":"CollectionAssertions","l":"assertSameSize(Iterable<?>, Iterable<?>, Supplier<String>)","u":"assertSameSize(java.lang.Iterable,java.lang.Iterable,java.util.function.Supplier)"},{"p":"org.soliscode.test.assertions","c":"Assertions","l":"assertThrowsAny(Collection<Class<? extends Throwable>>, Executable)","u":"assertThrowsAny(java.util.Collection,org.junit.jupiter.api.function.Executable)"},{"p":"org.soliscode.test.assertions","c":"AssertThrowsAny","l":"assertThrowsAny(Collection<Class<? extends Throwable>>, Executable)","u":"assertThrowsAny(java.util.Collection,org.junit.jupiter.api.function.Executable)"},{"p":"org.soliscode.test.assertions","c":"Assertions","l":"assertThrowsAny(Collection<Class<? extends Throwable>>, Executable, String)","u":"assertThrowsAny(java.util.Collection,org.junit.jupiter.api.function.Executable,java.lang.String)"},{"p":"org.soliscode.test.assertions","c":"AssertThrowsAny","l":"assertThrowsAny(Collection<Class<? extends Throwable>>, Executable, String)","u":"assertThrowsAny(java.util.Collection,org.junit.jupiter.api.function.Executable,java.lang.String)"},{"p":"org.soliscode.test.assertions","c":"Assertions","l":"assertThrowsAny(Collection<Class<? extends Throwable>>, Executable, Supplier<String>)","u":"assertThrowsAny(java.util.Collection,org.junit.jupiter.api.function.Executable,java.util.function.Supplier)"},{"p":"org.soliscode.test.assertions","c":"AssertThrowsAny","l":"assertThrowsAny(Collection<Class<? extends Throwable>>, Executable, Supplier<String>)","u":"assertThrowsAny(java.util.Collection,org.junit.jupiter.api.function.Executable,java.util.function.Supplier)"},{"p":"org.soliscode.test.assertions","c":"Assertions","l":"assertThrowsDifferent(Class<? extends Throwable>, Executable)","u":"assertThrowsDifferent(java.lang.Class,org.junit.jupiter.api.function.Executable)"},{"p":"org.soliscode.test.assertions","c":"AssertThrowsDifferent","l":"assertThrowsDifferent(Class<? extends Throwable>, Executable)","u":"assertThrowsDifferent(java.lang.Class,org.junit.jupiter.api.function.Executable)"},{"p":"org.soliscode.test.assertions","c":"Assertions","l":"assertThrowsDifferent(Class<? extends Throwable>, Executable, String)","u":"assertThrowsDifferent(java.lang.Class,org.junit.jupiter.api.function.Executable,java.lang.String)"},{"p":"org.soliscode.test.assertions","c":"AssertThrowsDifferent","l":"assertThrowsDifferent(Class<? extends Throwable>, Executable, String)","u":"assertThrowsDifferent(java.lang.Class,org.junit.jupiter.api.function.Executable,java.lang.String)"},{"p":"org.soliscode.test.assertions","c":"Assertions","l":"assertThrowsDifferent(Class<? extends Throwable>, Executable, Supplier<String>)","u":"assertThrowsDifferent(java.lang.Class,org.junit.jupiter.api.function.Executable,java.util.function.Supplier)"},{"p":"org.soliscode.test.assertions","c":"AssertThrowsDifferent","l":"assertThrowsDifferent(Class<? extends Throwable>, Executable, Supplier<String>)","u":"assertThrowsDifferent(java.lang.Class,org.junit.jupiter.api.function.Executable,java.util.function.Supplier)"},{"p":"org.soliscode.test.assertions","c":"Assertions","l":"assertThrowsDifferent(Collection<Class<? extends Throwable>>, Executable)","u":"assertThrowsDifferent(java.util.Collection,org.junit.jupiter.api.function.Executable)"},{"p":"org.soliscode.test.assertions","c":"AssertThrowsDifferent","l":"assertThrowsDifferent(Collection<Class<? extends Throwable>>, Executable)","u":"assertThrowsDifferent(java.util.Collection,org.junit.jupiter.api.function.Executable)"},{"p":"org.soliscode.test.assertions","c":"Assertions","l":"assertThrowsDifferent(Collection<Class<? extends Throwable>>, Executable, String)","u":"assertThrowsDifferent(java.util.Collection,org.junit.jupiter.api.function.Executable,java.lang.String)"},{"p":"org.soliscode.test.assertions","c":"AssertThrowsDifferent","l":"assertThrowsDifferent(Collection<Class<? extends Throwable>>, Executable, String)","u":"assertThrowsDifferent(java.util.Collection,org.junit.jupiter.api.function.Executable,java.lang.String)"},{"p":"org.soliscode.test.assertions","c":"Assertions","l":"assertThrowsDifferent(Collection<Class<? extends Throwable>>, Executable, Supplier<String>)","u":"assertThrowsDifferent(java.util.Collection,org.junit.jupiter.api.function.Executable,java.util.function.Supplier)"},{"p":"org.soliscode.test.assertions","c":"AssertThrowsDifferent","l":"assertThrowsDifferent(Collection<Class<? extends Throwable>>, Executable, Supplier<String>)","u":"assertThrowsDifferent(java.util.Collection,org.junit.jupiter.api.function.Executable,java.util.function.Supplier)"},{"p":"org.soliscode.test.util","c":"IterableTestOps","l":"asSet(Iterable<E>)","u":"asSet(java.lang.Iterable)"},{"p":"org.soliscode.test.breakable","c":"Break","l":"Break(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"org.soliscode.test.breakable","c":"BreakableCollection","l":"BreakableCollection()","u":"%3Cinit%3E()"},{"p":"org.soliscode.test.breakable","c":"BreakableCollection","l":"BreakableCollection(BreakableCollection<E>)","u":"%3Cinit%3E(org.soliscode.test.breakable.BreakableCollection)"},{"p":"org.soliscode.test.breakable","c":"BreakableCollection","l":"BreakableCollection(Collection<E>)","u":"%3Cinit%3E(java.util.Collection)"},{"p":"org.soliscode.test.breakable","c":"BreakableCollection","l":"BreakableCollection(Collection<E>, Collection<Break>, int)","u":"%3Cinit%3E(java.util.Collection,java.util.Collection,int)"},{"p":"org.soliscode.test.breakable","c":"BreakableIterable","l":"BreakableIterable()","u":"%3Cinit%3E()"},{"p":"org.soliscode.test.breakable","c":"BreakableIterable","l":"BreakableIterable(BreakableIterable<E>)","u":"%3Cinit%3E(org.soliscode.test.breakable.BreakableIterable)"},{"p":"org.soliscode.test.breakable","c":"BreakableIterable","l":"BreakableIterable(Collection<E>)","u":"%3Cinit%3E(java.util.Collection)"},{"p":"org.soliscode.test.breakable","c":"BreakableIterable","l":"BreakableIterable(Iterable<E>, Collection<Break>, int)","u":"%3Cinit%3E(java.lang.Iterable,java.util.Collection,int)"},{"p":"org.soliscode.test.breakable","c":"BreakableIterable","l":"BreakableIterable(Set<Break>)","u":"%3Cinit%3E(java.util.Set)"},{"p":"org.soliscode.test.breakable","c":"BreakableIterator","l":"BreakableIterator(Iterator<E>, Collection<Break>, int)","u":"%3Cinit%3E(java.util.Iterator,java.util.Collection,int)"},{"p":"org.soliscode.test.breakable","c":"BreakableList","l":"BreakableList()","u":"%3Cinit%3E()"},{"p":"org.soliscode.test.breakable","c":"BreakableList","l":"BreakableList(BreakableList<E>)","u":"%3Cinit%3E(org.soliscode.test.breakable.BreakableList)"},{"p":"org.soliscode.test.breakable","c":"BreakableList","l":"BreakableList(List<E>)","u":"%3Cinit%3E(java.util.List)"},{"p":"org.soliscode.test.breakable","c":"BreakableList","l":"BreakableList(List<E>, Collection<Break>, int)","u":"%3Cinit%3E(java.util.List,java.util.Collection,int)"},{"p":"org.soliscode.test.breakable","c":"BreakableSequencedCollection","l":"BreakableSequencedCollection()","u":"%3Cinit%3E()"},{"p":"org.soliscode.test.breakable","c":"BreakableSequencedCollection","l":"BreakableSequencedCollection(BreakableSequencedCollection<E>)","u":"%3Cinit%3E(org.soliscode.test.breakable.BreakableSequencedCollection)"},{"p":"org.soliscode.test.breakable","c":"BreakableSequencedCollection","l":"BreakableSequencedCollection(List<E>)","u":"%3Cinit%3E(java.util.List)"},{"p":"org.soliscode.test.breakable","c":"BreakableSequencedCollection","l":"BreakableSequencedCollection(List<E>, Collection<Break>, int)","u":"%3Cinit%3E(java.util.List,java.util.Collection,int)"},{"p":"org.soliscode.test.breakable","c":"BreakableSpliterator","l":"BreakableSpliterator(Spliterator<E>, Collection<Break>, int)","u":"%3Cinit%3E(java.util.Spliterator,java.util.Collection,int)"},{"p":"org.soliscode.test.breakable","c":"BreakableIterable.AbstractBuilder","l":"breaks"},{"p":"org.soliscode.test.breakable","c":"AbstractBreakable","l":"breaks()"},{"p":"org.soliscode.test.breakable","c":"Breakable","l":"breaks()"},{"p":"org.soliscode.test.breakable","c":"BreakableCollection.Builder","l":"build()"},{"p":"org.soliscode.test.breakable","c":"BreakableIterable.AbstractBuilder","l":"build()"},{"p":"org.soliscode.test.breakable","c":"BreakableIterable.Builder","l":"build()"},{"p":"org.soliscode.test.breakable","c":"BreakableSequencedCollection.Builder","l":"build()"},{"p":"org.soliscode.test.breakable","c":"Breakables","l":"buildCollection(Class<E>)","u":"buildCollection(java.lang.Class)"},{"p":"org.soliscode.test.breakable","c":"Breakables","l":"buildCollection(E...)"},{"p":"org.soliscode.test.breakable","c":"BreakableCollection.Builder","l":"Builder()","u":"%3Cinit%3E()"},{"p":"org.soliscode.test.breakable","c":"BreakableIterable.Builder","l":"Builder()","u":"%3Cinit%3E()"},{"p":"org.soliscode.test.breakable","c":"BreakableSequencedCollection.Builder","l":"Builder()","u":"%3Cinit%3E()"},{"p":"org.soliscode.test.breakable","c":"BreakableCollection.Builder","l":"Builder(BreakableCollection.Builder<E>)","u":"%3Cinit%3E(org.soliscode.test.breakable.BreakableCollection.Builder)"},{"p":"org.soliscode.test.breakable","c":"BreakableIterable.Builder","l":"Builder(BreakableIterable.Builder<E>)","u":"%3Cinit%3E(org.soliscode.test.breakable.BreakableIterable.Builder)"},{"p":"org.soliscode.test.breakable","c":"BreakableSequencedCollection.Builder","l":"Builder(BreakableSequencedCollection.Builder<E>)","u":"%3Cinit%3E(org.soliscode.test.breakable.BreakableSequencedCollection.Builder)"},{"p":"org.soliscode.test.breakable","c":"BreakableSequencedCollection.Builder","l":"Builder(List<E>)","u":"%3Cinit%3E(java.util.List)"},{"p":"org.soliscode.test.breakable","c":"Breakables","l":"buildIterable(Class<E>)","u":"buildIterable(java.lang.Class)"},{"p":"org.soliscode.test.breakable","c":"Breakables","l":"buildIterable(E...)"},{"p":"org.soliscode.test.breakable","c":"Breakables","l":"buildSequencedCollection(Class<E>)","u":"buildSequencedCollection(java.lang.Class)"},{"p":"org.soliscode.test.breakable","c":"Breakables","l":"buildSequencedCollection(E...)"},{"p":"org.soliscode.test.contract.iterable","c":"SpliteratorContract","l":"CHARACTERISTIC_VALUES"},{"p":"org.soliscode.test.breakable","c":"BreakableIterable.AbstractBuilder","l":"characteristics"},{"p":"org.soliscode.test.breakable","c":"BreakableSpliterator","l":"characteristics()"},{"p":"org.soliscode.test.breakable","c":"BreakableCollection","l":"checkArgument(Object)","u":"checkArgument(java.lang.Object)"},{"p":"org.soliscode.test.breakable","c":"BreakableCollection","l":"checkNewElement(E)"},{"p":"org.soliscode.test.contract","c":"CollectionMethods","l":"Clear"},{"p":"org.soliscode.test.breakable","c":"BreakableCollection","l":"CLEAR_DOES_NOT_REMOVE_ANY_ELEMENTS"},{"p":"org.soliscode.test.breakable","c":"BreakableCollection","l":"CLEAR_SKIPS_FIRST_ELEMENT"},{"p":"org.soliscode.test.breakable","c":"BreakableCollection","l":"CLEAR_SKIPS_LAST_ELEMENT"},{"p":"org.soliscode.test.breakable","c":"BreakableCollection","l":"clear()"},{"p":"org.soliscode.test.interfaces","c":"CollectionOnly","l":"clear()"},{"p":"org.soliscode.test.util","c":"CollectingConsumer","l":"CollectingConsumer()","u":"%3Cinit%3E()"},{"p":"org.soliscode.test.interfaces","c":"CollectionOnly","l":"CollectionOnly()","u":"%3Cinit%3E()"},{"p":"org.soliscode.test.interfaces","c":"CollectionOnly","l":"CollectionOnly(Collection<E>)","u":"%3Cinit%3E(java.util.Collection)"},{"p":"org.soliscode.test.interfaces","c":"CollectionOnly","l":"CollectionOnly(CollectionOnly<E>)","u":"%3Cinit%3E(org.soliscode.test.interfaces.CollectionOnly)"},{"p":"org.soliscode.test.breakable","c":"BreakableCollection","l":"collectionProvider(ObjectProvider<E>)","u":"collectionProvider(org.soliscode.test.provider.ObjectProvider)"},{"p":"org.soliscode.test.breakable","c":"BreakableCollection","l":"collectionProvider(ObjectProvider<E>, Set<Break>)","u":"collectionProvider(org.soliscode.test.provider.ObjectProvider,java.util.Set)"},{"p":"org.soliscode.test.util","c":"AlwaysThrows","l":"compareTo(AlwaysThrows)","u":"compareTo(org.soliscode.test.util.AlwaysThrows)"},{"p":"org.soliscode.test.util","c":"MatchEverything","l":"compareTo(MatchEverything)","u":"compareTo(org.soliscode.test.util.MatchEverything)"},{"p":"org.soliscode.test.util","c":"MatchNothing","l":"compareTo(MatchNothing)","u":"compareTo(org.soliscode.test.util.MatchNothing)"},{"p":"org.soliscode.test.util","c":"UncachedInteger","l":"compareTo(UncachedInteger)","u":"compareTo(org.soliscode.test.util.UncachedInteger)"},{"p":"org.soliscode.test.assertions.actions","c":"AssertActions","l":"consumeCount(int)"},{"p":"org.soliscode.test.assertions.actions","c":"AssertActions","l":"consumeCount(int, String)","u":"consumeCount(int,java.lang.String)"},{"p":"org.soliscode.test.assertions.actions","c":"AssertActions","l":"consumeCount(int, Supplier<String>)","u":"consumeCount(int,java.util.function.Supplier)"},{"p":"org.soliscode.test.assertions.actions","c":"AssertActions","l":"consumeExactly(Iterable<T>)","u":"consumeExactly(java.lang.Iterable)"},{"p":"org.soliscode.test.assertions.actions","c":"AssertActions","l":"consumeExactly(Iterable<T>, String)","u":"consumeExactly(java.lang.Iterable,java.lang.String)"},{"p":"org.soliscode.test.assertions.actions","c":"AssertActions","l":"consumeExactly(Iterable<T>, Supplier<String>)","u":"consumeExactly(java.lang.Iterable,java.util.function.Supplier)"},{"p":"org.soliscode.test.assertions.actions","c":"AssertActions","l":"consumeOnly(Iterable<T>)","u":"consumeOnly(java.lang.Iterable)"},{"p":"org.soliscode.test.assertions.actions","c":"AssertActions","l":"consumeOnly(Iterable<T>, String)","u":"consumeOnly(java.lang.Iterable,java.lang.String)"},{"p":"org.soliscode.test.assertions.actions","c":"AssertActions","l":"consumeOnly(Iterable<T>, Supplier<String>)","u":"consumeOnly(java.lang.Iterable,java.util.function.Supplier)"},{"p":"org.soliscode.test.breakable","c":"BreakableCollection","l":"CONTAINS_ALL_ALWAYS_RETURNS_FALSE"},{"p":"org.soliscode.test.breakable","c":"BreakableCollection","l":"CONTAINS_ALL_ALWAYS_RETURNS_TRUE"},{"p":"org.soliscode.test.breakable","c":"BreakableCollection","l":"CONTAINS_ALL_RETURNS_OPPOSITE_VALUE"},{"p":"org.soliscode.test.breakable","c":"BreakableCollection","l":"CONTAINS_ALWAYS_RETURNS_FALSE"},{"p":"org.soliscode.test.breakable","c":"BreakableCollection","l":"CONTAINS_ALWAYS_RETURNS_TRUE"},{"p":"org.soliscode.test.breakable","c":"BreakableCollection","l":"CONTAINS_RETURNS_OPPOSITE_VALUE"},{"p":"org.soliscode.test.util","c":"IterableTestOps","l":"contains(Iterable<?>, Object)","u":"contains(java.lang.Iterable,java.lang.Object)"},{"p":"org.soliscode.test.breakable","c":"BreakableCollection","l":"contains(Object)","u":"contains(java.lang.Object)"},{"p":"org.soliscode.test.interfaces","c":"CollectionOnly","l":"contains(Object)","u":"contains(java.lang.Object)"},{"p":"org.soliscode.test.util","c":"IdentitySet","l":"contains(Object)","u":"contains(java.lang.Object)"},{"p":"org.soliscode.test.contract","c":"CollectionMethods","l":"ContainsAll"},{"p":"org.soliscode.test.breakable","c":"BreakableCollection","l":"containsAll(Collection<?>)","u":"containsAll(java.util.Collection)"},{"p":"org.soliscode.test.interfaces","c":"CollectionOnly","l":"containsAll(Collection<?>)","u":"containsAll(java.util.Collection)"},{"p":"org.soliscode.test.util","c":"IterableTestOps","l":"containsByIdentity(Iterable<?>, Object)","u":"containsByIdentity(java.lang.Iterable,java.lang.Object)"},{"p":"org.soliscode.test.breakable","c":"BreakableCollection.Builder","l":"copy()"},{"p":"org.soliscode.test.breakable","c":"BreakableIterable.AbstractBuilder","l":"copy()"},{"p":"org.soliscode.test.breakable","c":"BreakableIterable.Builder","l":"copy()"},{"p":"org.soliscode.test.breakable","c":"BreakableSequencedCollection.Builder","l":"copy()"},{"p":"org.soliscode.test.util","c":"IterableTestOps","l":"copy(Iterable<E>)","u":"copy(java.lang.Iterable)"},{"p":"org.soliscode.test.util","c":"IterableTestOps","l":"copyFirst(Iterable<E>, int)","u":"copyFirst(java.lang.Iterable,int)"},{"p":"org.soliscode.test.provider","c":"StringProvider","l":"copyInstance(String)","u":"copyInstance(java.lang.String)"},{"p":"org.soliscode.test.provider","c":"DoubleNumberProvider","l":"copyInstance(T)"},{"p":"org.soliscode.test.provider","c":"FunctionalProvider","l":"copyInstance(T)"},{"p":"org.soliscode.test.provider","c":"IntegerNumberProvider","l":"copyInstance(T)"},{"p":"org.soliscode.test.provider","c":"ObjectProvider","l":"copyInstance(T)"},{"p":"org.soliscode.test.util","c":"CountingConsumer","l":"count()"},{"p":"org.soliscode.test.util","c":"CountingConsumer","l":"CountingConsumer()","u":"%3Cinit%3E()"},{"p":"org.soliscode.test.provider","c":"ObjectProvider","l":"createEqualObjects(int)"},{"p":"org.soliscode.test.provider","c":"ObjectProvider","l":"createInstance()"},{"p":"org.soliscode.test.provider","c":"CollectionProvider","l":"createInstance(Collection<E>)","u":"createInstance(java.util.Collection)"},{"p":"org.soliscode.test.provider","c":"FunctionalCollectionProvider","l":"createInstance(Collection<E>)","u":"createInstance(java.util.Collection)"},{"p":"org.soliscode.test.provider","c":"CollectionProvider","l":"createInstance(E[])"},{"p":"org.soliscode.test.provider","c":"FunctionalCollectionProvider","l":"createInstance(E[])"},{"p":"org.soliscode.test.provider","c":"CollectionProvider","l":"createInstance(int)"},{"p":"org.soliscode.test.provider","c":"DoubleNumberProvider","l":"createInstance(int)"},{"p":"org.soliscode.test.provider","c":"FunctionalCollectionProvider","l":"createInstance(int)"},{"p":"org.soliscode.test.provider","c":"FunctionalProvider","l":"createInstance(int)"},{"p":"org.soliscode.test.provider","c":"IntegerNumberProvider","l":"createInstance(int)"},{"p":"org.soliscode.test.provider","c":"ObjectProvider","l":"createInstance(int)"},{"p":"org.soliscode.test.provider","c":"StringProvider","l":"createInstance(int)"},{"p":"org.soliscode.test.provider","c":"CollectionProvider","l":"createInstanceWithUniqueElements()"},{"p":"org.soliscode.test.provider","c":"FunctionalCollectionProvider","l":"createInstanceWithUniqueElements()"},{"p":"org.soliscode.test.provider","c":"CollectionProvider","l":"createInstanceWithUniqueElements(int)"},{"p":"org.soliscode.test.provider","c":"FunctionalCollectionProvider","l":"createInstanceWithUniqueElements(int)"},{"p":"org.soliscode.test.provider","c":"CollectionProvider","l":"createInstanceWithUniqueElements(int, int)","u":"createInstanceWithUniqueElements(int,int)"},{"p":"org.soliscode.test.provider","c":"FunctionalCollectionProvider","l":"createInstanceWithUniqueElements(int, int)","u":"createInstanceWithUniqueElements(int,int)"},{"p":"org.soliscode.test.provider","c":"ObjectProvider","l":"createRandoInstances(int)"},{"p":"org.soliscode.test.provider","c":"CollectionProvider","l":"createSingleton()"},{"p":"org.soliscode.test.provider","c":"FunctionalCollectionProvider","l":"createSingleton()"},{"p":"org.soliscode.test.provider","c":"CollectionProvider","l":"createSingleton(E)"},{"p":"org.soliscode.test.provider","c":"FunctionalCollectionProvider","l":"createSingleton(E)"},{"p":"org.soliscode.test.provider","c":"ObjectProvider","l":"createUniqueInstances(int)"},{"p":"org.soliscode.test.provider","c":"ObjectProvider","l":"createUniqueInstances(int, int)","u":"createUniqueInstances(int,int)"},{"p":"org.soliscode.test.provider","c":"DoubleNumberProvider","l":"createValue(double)"},{"p":"org.soliscode.test.provider","c":"DoubleProvider","l":"createValue(double)"},{"p":"org.soliscode.test.provider","c":"FloatProvider","l":"createValue(double)"},{"p":"org.soliscode.test.provider","c":"IntegerNumberProvider","l":"createValue(int)"},{"p":"org.soliscode.test.provider","c":"IntegerProvider","l":"createValue(int)"},{"p":"org.soliscode.test.provider","c":"LongProvider","l":"createValue(int)"},{"p":"org.soliscode.test.provider","c":"ShortProvider","l":"createValue(int)"},{"p":"org.soliscode.test.breakable","c":"BreakableIterable","l":"DEFAULT_CAPACITY"},{"p":"org.soliscode.test.contract.support","c":"CollectionContractSupport","l":"DEFAULT_SIZE"},{"p":"org.soliscode.test.provider","c":"DoubleNumberProvider","l":"defaultInstance()"},{"p":"org.soliscode.test.provider","c":"FunctionalProvider","l":"defaultInstance()"},{"p":"org.soliscode.test.provider","c":"IntegerNumberProvider","l":"defaultInstance()"},{"p":"org.soliscode.test.provider","c":"ObjectProvider","l":"defaultInstance()"},{"p":"org.soliscode.test.provider","c":"StringProvider","l":"defaultInstance()"},{"p":"org.soliscode.test.breakable","c":"Break","l":"description()"},{"p":"org.soliscode.test.breakable","c":"BreakableCollection.AbstractBuilder","l":"doesNotPermitDuplicates()"},{"p":"org.soliscode.test.breakable","c":"BreakableCollection.AbstractBuilder","l":"doesNotPermitIncompatibleTypes()"},{"p":"org.soliscode.test.breakable","c":"BreakableCollection.AbstractBuilder","l":"doesNotPermitNulls()"},{"p":"org.soliscode.test.breakable","c":"BreakableIterable.AbstractBuilder","l":"doesNotSupport(OptionalMethod)","u":"doesNotSupport(org.soliscode.test.OptionalMethod)"},{"p":"org.soliscode.test","c":"OptionalMethodSupport","l":"doesNotSupportMethod(OptionalMethod)","u":"doesNotSupportMethod(org.soliscode.test.OptionalMethod)"},{"p":"org.soliscode.test.breakable","c":"BreakableCollection.AbstractBuilder","l":"doesNotSupportMethod(OptionalMethod)","u":"doesNotSupportMethod(org.soliscode.test.OptionalMethod)"},{"p":"org.soliscode.test.contract.collection","c":"CollectionContract","l":"doesNotSupportMethod(OptionalMethod)","u":"doesNotSupportMethod(org.soliscode.test.OptionalMethod)"},{"p":"org.soliscode.test.contract.collection","c":"CollectionContract","l":"doesNotSupportModification()"},{"p":"org.soliscode.test.contract.list","c":"ListContract","l":"doesNotSupportModification()"},{"p":"org.soliscode.test.contract.sequenced","c":"SequencedCollectionContract","l":"doesNotSupportModification()"},{"p":"org.soliscode.test.provider","c":"Providers","l":"doubleProvider()"},{"p":"org.soliscode.test.provider","c":"DoubleProvider","l":"DoubleProvider()","u":"%3Cinit%3E()"},{"p":"org.soliscode.test.interfaces","c":"NumberOnly","l":"doubleValue()"},{"p":"org.soliscode.test.util","c":"UncachedInteger","l":"doubleValue()"},{"p":"org.soliscode.test.contract.support","c":"ElementProviderSupport","l":"elementProvider()"},{"p":"org.soliscode.test.contract.support","c":"WithIntegerElement","l":"elementProvider()"},{"p":"org.soliscode.test.provider","c":"CollectionProvider","l":"elementProvider()"},{"p":"org.soliscode.test.provider","c":"FunctionalCollectionProvider","l":"elementProvider()"},{"p":"org.soliscode.test.breakable","c":"BreakableIterable.AbstractBuilder","l":"elements"},{"p":"org.soliscode.test.util","c":"IterableTestOps","l":"empty()"},{"p":"org.soliscode.test.provider","c":"CollectionProvider","l":"emptyInstance()"},{"p":"org.soliscode.test.provider","c":"FunctionalCollectionProvider","l":"emptyInstance()"},{"p":"org.soliscode.test.breakable","c":"Breakables","l":"ensureUnbroken(Collection<E>)","u":"ensureUnbroken(java.util.Collection)"},{"p":"org.soliscode.test.breakable","c":"Breakables","l":"ensureUnbroken(Iterable<E>)","u":"ensureUnbroken(java.lang.Iterable)"},{"p":"org.soliscode.test.provider","c":"ObjectProvider","l":"equalInstanceSupplier()"},{"p":"org.soliscode.test.contract.object","c":"ObjectMethods","l":"Equals"},{"p":"org.soliscode.test.util","c":"IterableTestOps","l":"equals(Iterable<?>, Iterable<?>)","u":"equals(java.lang.Iterable,java.lang.Iterable)"},{"p":"org.soliscode.test.breakable","c":"Break","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.soliscode.test.breakable","c":"BreakableIterable","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.soliscode.test.interfaces","c":"CollectionOnly","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.soliscode.test.interfaces","c":"IterableOnly","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.soliscode.test.interfaces","c":"NumberOnly","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.soliscode.test.interfaces","c":"ObjectOnly","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.soliscode.test.util","c":"AlwaysThrows","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.soliscode.test.util","c":"MatchEverything","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.soliscode.test.util","c":"MatchNothing","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.soliscode.test.util","c":"UncachedInteger","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.soliscode.test.breakable","c":"BreakableSpliterator","l":"estimateSize()"},{"p":"org.soliscode.test.assertions.collection","c":"IterableAssertion","l":"failIterableIsNull(String, Object)","u":"failIterableIsNull(java.lang.String,java.lang.Object)"},{"p":"org.soliscode.test.provider","c":"Providers","l":"floatProvider()"},{"p":"org.soliscode.test.provider","c":"FloatProvider","l":"FloatProvider()","u":"%3Cinit%3E()"},{"p":"org.soliscode.test.interfaces","c":"NumberOnly","l":"floatValue()"},{"p":"org.soliscode.test.util","c":"UncachedInteger","l":"floatValue()"},{"p":"org.soliscode.test.breakable","c":"BreakableIterable","l":"FOR_EACH_DOES_NOT_CALL_ACTION"},{"p":"org.soliscode.test.breakable","c":"BreakableIterable","l":"FOR_EACH_SKIPS_FIRST_ELEMENT"},{"p":"org.soliscode.test.breakable","c":"BreakableIterable","l":"FOR_EACH_SKIPS_LAST_ELEMENT"},{"p":"org.soliscode.test.breakable","c":"BreakableIterable","l":"FOR_EACH_THROWS_WRONG_EXCEPTION_FOR_NULL_ARGUMENT"},{"p":"org.soliscode.test.breakable","c":"BreakableIterable","l":"forEach(Consumer<? super E>)","u":"forEach(java.util.function.Consumer)"},{"p":"org.soliscode.test.breakable","c":"BreakableIterator","l":"forEachRemaining(Consumer<? super E>)","u":"forEachRemaining(java.util.function.Consumer)"},{"p":"org.soliscode.test.breakable","c":"BreakableSpliterator","l":"forEachRemaining(Consumer<? super E>)","u":"forEachRemaining(java.util.function.Consumer)"},{"p":"org.soliscode.test.provider","c":"CollectionProviders","l":"from(Supplier<C>, Function<C, C>, Function<Collection<E>, C>, ObjectProvider<E>)","u":"from(java.util.function.Supplier,java.util.function.Function,java.util.function.Function,org.soliscode.test.provider.ObjectProvider)"},{"p":"org.soliscode.test.provider","c":"FunctionalCollectionProvider","l":"from(Supplier<I>, Function<I, I>, Function<Collection<E>, I>, ObjectProvider<E>)","u":"from(java.util.function.Supplier,java.util.function.Function,java.util.function.Function,org.soliscode.test.provider.ObjectProvider)"},{"p":"org.soliscode.test.provider","c":"FunctionalCollectionProvider","l":"FunctionalCollectionProvider(Supplier<I>, Function<I, I>, Function<Collection<E>, I>, ObjectProvider<E>)","u":"%3Cinit%3E(java.util.function.Supplier,java.util.function.Function,java.util.function.Function,org.soliscode.test.provider.ObjectProvider)"},{"p":"org.soliscode.test.provider","c":"FunctionalProvider","l":"FunctionalProvider(Supplier<T>, Function<T, T>)","u":"%3Cinit%3E(java.util.function.Supplier,java.util.function.Function)"},{"p":"org.soliscode.test.provider","c":"FunctionalProvider","l":"FunctionalProvider(Supplier<T>, Function<T, T>, Function<Integer, T>)","u":"%3Cinit%3E(java.util.function.Supplier,java.util.function.Function,java.util.function.Function)"},{"p":"org.soliscode.test.contract","c":"CollectionMethods","l":"Get"},{"p":"org.soliscode.test.breakable","c":"BreakableList","l":"GET_ALWAYS_RETURNS_NULL"},{"p":"org.soliscode.test.breakable","c":"BreakableList","l":"GET_ALWAYS_RETURNS_THE_FIRST_ELEMENT"},{"p":"org.soliscode.test.breakable","c":"BreakableList","l":"GET_ALWAYS_RETURNS_THE_LAST_ELEMENT"},{"p":"org.soliscode.test.breakable","c":"BreakableSequencedCollection","l":"GET_FIRST_ALWAYS_THROWS"},{"p":"org.soliscode.test.breakable","c":"BreakableSequencedCollection","l":"GET_FIRST_RETURNS_NULL"},{"p":"org.soliscode.test.breakable","c":"BreakableSequencedCollection","l":"GET_FIRST_SKIPS_FIRST_ELEMENT"},{"p":"org.soliscode.test.breakable","c":"BreakableSequencedCollection","l":"GET_LAST_ALWAYS_THROWS"},{"p":"org.soliscode.test.breakable","c":"BreakableSequencedCollection","l":"GET_LAST_RETURNS_NULL"},{"p":"org.soliscode.test.breakable","c":"BreakableSequencedCollection","l":"GET_LAST_SKIPS_LAST_ELEMENT"},{"p":"org.soliscode.test.breakable","c":"BreakableList","l":"GET_RETURNS_NULL_ON_BAD_INDEX"},{"p":"org.soliscode.test.breakable","c":"BreakableList","l":"GET_RETURNS_THE_NEXT_ELEMENT"},{"p":"org.soliscode.test.breakable","c":"BreakableList","l":"GET_RETURNS_THE_PREVIOUS_ELEMENT"},{"p":"org.soliscode.test.breakable","c":"BreakableList","l":"GET_THROWS_WRONG_EXCEPTION_ON_BAD_INDEX"},{"p":"org.soliscode.test.breakable","c":"BreakableList","l":"get(int)"},{"p":"org.soliscode.test.breakable","c":"BreakableSpliterator","l":"getComparator()"},{"p":"org.soliscode.test.breakable","c":"BreakableSpliterator","l":"getExactSizeIfKnown()"},{"p":"org.soliscode.test.contract","c":"CollectionMethods","l":"GetFirst"},{"p":"org.soliscode.test.breakable","c":"BreakableSequencedCollection","l":"getFirst()"},{"p":"org.soliscode.test.util","c":"CollectionTestOps","l":"getGenericParameter(Object, int)","u":"getGenericParameter(java.lang.Object,int)"},{"p":"org.soliscode.test.contract","c":"CollectionMethods","l":"GetLast"},{"p":"org.soliscode.test.breakable","c":"BreakableSequencedCollection","l":"getLast()"},{"p":"org.soliscode.test.breakable","c":"AbstractBreakable","l":"hasBreak(Break)","u":"hasBreak(org.soliscode.test.breakable.Break)"},{"p":"org.soliscode.test.breakable","c":"Breakable","l":"hasBreak(Break)","u":"hasBreak(org.soliscode.test.breakable.Break)"},{"p":"org.soliscode.test.breakable","c":"BreakableSpliterator","l":"hasCharacteristics(int)"},{"p":"org.soliscode.test.contract.object","c":"ObjectMethods","l":"HashCode"},{"p":"org.soliscode.test.breakable","c":"Break","l":"hashCode()"},{"p":"org.soliscode.test.breakable","c":"BreakableIterable","l":"hashCode()"},{"p":"org.soliscode.test.interfaces","c":"CollectionOnly","l":"hashCode()"},{"p":"org.soliscode.test.interfaces","c":"IterableOnly","l":"hashCode()"},{"p":"org.soliscode.test.interfaces","c":"NumberOnly","l":"hashCode()"},{"p":"org.soliscode.test.interfaces","c":"ObjectOnly","l":"hashCode()"},{"p":"org.soliscode.test.util","c":"AlwaysThrows","l":"hashCode()"},{"p":"org.soliscode.test.util","c":"MatchEverything","l":"hashCode()"},{"p":"org.soliscode.test.util","c":"MatchNothing","l":"hashCode()"},{"p":"org.soliscode.test.util","c":"UncachedInteger","l":"hashCode()"},{"p":"org.soliscode.test.breakable","c":"BreakableIterator","l":"hasNext()"},{"p":"org.soliscode.test.util","c":"IdentitySet","l":"IdentitySet()","u":"%3Cinit%3E()"},{"p":"org.soliscode.test.util","c":"IdentitySet","l":"IdentitySet(Collection<? extends E>)","u":"%3Cinit%3E(java.util.Collection)"},{"p":"org.soliscode.test.breakable","c":"BreakableList","l":"indexOf(Object)","u":"indexOf(java.lang.Object)"},{"p":"org.soliscode.test.provider","c":"Providers","l":"integerProvider()"},{"p":"org.soliscode.test.provider","c":"IntegerProvider","l":"IntegerProvider()","u":"%3Cinit%3E()"},{"p":"org.soliscode.test.interfaces","c":"NumberOnly","l":"intValue()"},{"p":"org.soliscode.test.util","c":"UncachedInteger","l":"intValue()"},{"p":"org.soliscode.test.breakable","c":"BreakableCollection","l":"IS_EMPTY_ALWAYS_RETURNS_FALSE"},{"p":"org.soliscode.test.breakable","c":"BreakableCollection","l":"IS_EMPTY_ALWAYS_RETURNS_TRUE"},{"p":"org.soliscode.test.breakable","c":"BreakableCollection","l":"IS_EMPTY_RETURNS_OPPOSITE_VALUE"},{"p":"org.soliscode.test.breakable","c":"BreakableCollection","l":"isEmpty()"},{"p":"org.soliscode.test.interfaces","c":"CollectionOnly","l":"isEmpty()"},{"p":"org.soliscode.test.util","c":"IterableTestOps","l":"isEmpty(Iterable<?>)","u":"isEmpty(java.lang.Iterable)"},{"p":"org.soliscode.test.interfaces","c":"IterableOnly","l":"iterable"},{"p":"org.soliscode.test.assertions.collection","c":"IterableAssertion","l":"IterableAssertion()","u":"%3Cinit%3E()"},{"p":"org.soliscode.test.util","c":"UncachedInteger","l":"iterableOf(int...)"},{"p":"org.soliscode.test.interfaces","c":"IterableOnly","l":"IterableOnly()","u":"%3Cinit%3E()"},{"p":"org.soliscode.test.interfaces","c":"IterableOnly","l":"IterableOnly(Collection<E>)","u":"%3Cinit%3E(java.util.Collection)"},{"p":"org.soliscode.test.interfaces","c":"IterableOnly","l":"IterableOnly(Iterable<E>)","u":"%3Cinit%3E(java.lang.Iterable)"},{"p":"org.soliscode.test.breakable","c":"BreakableIterable","l":"iterableProvider(ObjectProvider<E>)","u":"iterableProvider(org.soliscode.test.provider.ObjectProvider)"},{"p":"org.soliscode.test.breakable","c":"BreakableIterable","l":"iterableProvider(ObjectProvider<E>, Set<Break>)","u":"iterableProvider(org.soliscode.test.provider.ObjectProvider,java.util.Set)"},{"p":"org.soliscode.test.breakable","c":"BreakableIterator","l":"ITERATOR_FOR_EACH_REMAINING_DOES_NOT_CALL_ACTION"},{"p":"org.soliscode.test.breakable","c":"BreakableIterator","l":"ITERATOR_FOR_EACH_REMAINING_THROWS_WRONG_EXCEPTION_FOR_NULL_ARGUMENT"},{"p":"org.soliscode.test.breakable","c":"BreakableIterator","l":"ITERATOR_HAS_NEXT_ALWAYS_RETURNS_FALSE"},{"p":"org.soliscode.test.breakable","c":"BreakableIterator","l":"ITERATOR_HAS_NEXT_ALWAYS_RETURNS_TRUE"},{"p":"org.soliscode.test.breakable","c":"BreakableIterator","l":"ITERATOR_HAS_NEXT_RETURNS_OPPOSITE_VALUE"},{"p":"org.soliscode.test.breakable","c":"BreakableIterator","l":"ITERATOR_IS_ALWAYS_EMPTY"},{"p":"org.soliscode.test.breakable","c":"BreakableIterator","l":"ITERATOR_NEXT_ALWAYS_RETURNS_NULL"},{"p":"org.soliscode.test.breakable","c":"BreakableIterator","l":"ITERATOR_NEXT_THROWS_WRONG_EXCEPTION"},{"p":"org.soliscode.test.breakable","c":"BreakableIterator","l":"ITERATOR_REMOVE_DOES_NOT_REMOVE_ELEMENT"},{"p":"org.soliscode.test.breakable","c":"BreakableIterator","l":"ITERATOR_REMOVE_THROWS_WRONG_EXCEPTION_FOR_ILLEGAL_STATE"},{"p":"org.soliscode.test.breakable","c":"BreakableIterator","l":"ITERATOR_REMOVE_THROWS_WRONG_EXCEPTION_IF_NOT_SUPPORTED"},{"p":"org.soliscode.test.breakable","c":"BreakableIterator","l":"ITERATOR_SKIPS_FIRST_ELEMENT"},{"p":"org.soliscode.test.breakable","c":"BreakableIterable","l":"iterator()"},{"p":"org.soliscode.test.interfaces","c":"IterableOnly","l":"iterator()"},{"p":"org.soliscode.test.util","c":"IdentitySet","l":"iterator()"},{"p":"org.soliscode.test.contract","c":"CollectionMethods","l":"IteratorForEachRemaining"},{"p":"org.soliscode.test.contract","c":"CollectionMethods","l":"IteratorRemove"},{"p":"org.soliscode.test.breakable","c":"BreakableList","l":"lastIndexOf(Object)","u":"lastIndexOf(java.lang.Object)"},{"p":"org.soliscode.test.breakable","c":"BreakableList","l":"listIterator()"},{"p":"org.soliscode.test.breakable","c":"BreakableList","l":"listIterator(int)"},{"p":"org.soliscode.test.util","c":"CollectionTestOps","l":"listOf(E, E, E)","u":"listOf(E,E,E)"},{"p":"org.soliscode.test.interfaces","c":"NumberOnly","l":"listOf(int...)"},{"p":"org.soliscode.test.util","c":"UncachedInteger","l":"listOf(int...)"},{"p":"org.soliscode.test.provider","c":"Providers","l":"longProvider()"},{"p":"org.soliscode.test.provider","c":"LongProvider","l":"LongProvider()","u":"%3Cinit%3E()"},{"p":"org.soliscode.test.interfaces","c":"NumberOnly","l":"longValue()"},{"p":"org.soliscode.test.util","c":"UncachedInteger","l":"longValue()"},{"p":"org.soliscode.test.util","c":"MatchEverything","l":"MatchEverything()","u":"%3Cinit%3E()"},{"p":"org.soliscode.test.util","c":"MatchNothing","l":"MatchNothing()","u":"%3Cinit%3E()"},{"p":"org.soliscode.test.provider","c":"IntegerNumberProvider","l":"maxIntegerValue()"},{"p":"org.soliscode.test.provider","c":"DoubleNumberProvider","l":"maxPrimitiveValue()"},{"p":"org.soliscode.test.provider","c":"DoubleNumberProvider","l":"maxValue()"},{"p":"org.soliscode.test.provider","c":"IntegerNumberProvider","l":"maxValue()"},{"p":"org.soliscode.test.provider","c":"NumberProvider","l":"maxValue()"},{"p":"org.soliscode.test.provider","c":"IntegerNumberProvider","l":"minIntegerValue()"},{"p":"org.soliscode.test.provider","c":"DoubleNumberProvider","l":"minPrimitiveValue()"},{"p":"org.soliscode.test.provider","c":"DoubleNumberProvider","l":"minValue()"},{"p":"org.soliscode.test.provider","c":"IntegerNumberProvider","l":"minValue()"},{"p":"org.soliscode.test.provider","c":"NumberProvider","l":"minValue()"},{"p":"org.soliscode.test.interfaces","c":"Interfaces","l":"narrowToCollection(Collection<E>)","u":"narrowToCollection(java.util.Collection)"},{"p":"org.soliscode.test.interfaces","c":"Interfaces","l":"narrowToIterable(Iterable<E>)","u":"narrowToIterable(java.lang.Iterable)"},{"p":"org.soliscode.test.interfaces","c":"Interfaces","l":"narrowToNumber(Number)","u":"narrowToNumber(java.lang.Number)"},{"p":"org.soliscode.test.interfaces","c":"Interfaces","l":"narrowToObject(Object)","u":"narrowToObject(java.lang.Object)"},{"p":"org.soliscode.test.util","c":"IterableTestOps","l":"newList(Iterable<E>)","u":"newList(java.lang.Iterable)"},{"p":"org.soliscode.test.breakable","c":"BreakableIterator","l":"next()"},{"p":"org.soliscode.test.interfaces","c":"NumberOnly","l":"NumberOnly(Number)","u":"%3Cinit%3E(java.lang.Number)"},{"p":"org.soliscode.test.interfaces","c":"ObjectOnly","l":"ObjectOnly()","u":"%3Cinit%3E()"},{"p":"org.soliscode.test.interfaces","c":"ObjectOnly","l":"ObjectOnly(Object)","u":"%3Cinit%3E(java.lang.Object)"},{"p":"org.soliscode.test.interfaces","c":"ObjectOnly","l":"ObjectOnly(ObjectOnly)","u":"%3Cinit%3E(org.soliscode.test.interfaces.ObjectOnly)"},{"p":"org.soliscode.test.interfaces","c":"CollectionOnly","l":"of()"},{"p":"org.soliscode.test.interfaces","c":"IterableOnly","l":"of()"},{"p":"org.soliscode.test.interfaces","c":"CollectionOnly","l":"of(E)"},{"p":"org.soliscode.test.interfaces","c":"IterableOnly","l":"of(E)"},{"p":"org.soliscode.test.interfaces","c":"CollectionOnly","l":"of(E, E)","u":"of(E,E)"},{"p":"org.soliscode.test.interfaces","c":"IterableOnly","l":"of(E, E)","u":"of(E,E)"},{"p":"org.soliscode.test.interfaces","c":"CollectionOnly","l":"of(E, E, E)","u":"of(E,E,E)"},{"p":"org.soliscode.test.interfaces","c":"IterableOnly","l":"of(E, E, E)","u":"of(E,E,E)"},{"p":"org.soliscode.test.interfaces","c":"CollectionOnly","l":"of(E, E, E, E)","u":"of(E,E,E,E)"},{"p":"org.soliscode.test.interfaces","c":"IterableOnly","l":"of(E, E, E, E)","u":"of(E,E,E,E)"},{"p":"org.soliscode.test.interfaces","c":"CollectionOnly","l":"of(E...)"},{"p":"org.soliscode.test.interfaces","c":"IterableOnly","l":"of(E...)"},{"p":"org.soliscode.test","c":"OptionalMethodSupport","l":"OptionalMethodSupport()","u":"%3Cinit%3E()"},{"p":"org.soliscode.test","c":"OptionalMethodSupport","l":"OptionalMethodSupport(OptionalMethodSupport)","u":"%3Cinit%3E(org.soliscode.test.OptionalMethodSupport)"},{"p":"org.soliscode.test.contract","c":"CollectionContractConfig","l":"permitDuplicates()"},{"p":"org.soliscode.test.contract","c":"DoesNotPermitDuplicates","l":"permitDuplicates()"},{"p":"org.soliscode.test.contract","c":"CollectionContractConfig","l":"permitIncompatibleTypes()"},{"p":"org.soliscode.test.contract","c":"DoesNotPermitIncompatibleTypes","l":"permitIncompatibleTypes()"},{"p":"org.soliscode.test.contract","c":"CollectionContractConfig","l":"permitNulls()"},{"p":"org.soliscode.test.contract","c":"DoesNotPermitNulls","l":"permitNulls()"},{"p":"org.soliscode.test.breakable","c":"BreakableCollection.AbstractBuilder","l":"permitsDuplicates"},{"p":"org.soliscode.test.breakable","c":"BreakableCollection","l":"permitsDuplicates()"},{"p":"org.soliscode.test.breakable","c":"BreakableCollection.AbstractBuilder","l":"permitsIncompatibleTypes"},{"p":"org.soliscode.test.breakable","c":"BreakableCollection","l":"permitsIncompatibleTypes()"},{"p":"org.soliscode.test.breakable","c":"BreakableCollection.AbstractBuilder","l":"permitsNulls"},{"p":"org.soliscode.test.breakable","c":"BreakableCollection","l":"permitsNulls()"},{"p":"org.soliscode.test.util","c":"CollectionTestOps","l":"preventNulls(Collection<E>)","u":"preventNulls(java.util.Collection)"},{"p":"org.soliscode.test.util","c":"CollectionTestOps","l":"preventNulls(List<E>)","u":"preventNulls(java.util.List)"},{"p":"org.soliscode.test.provider","c":"CollectionProviders","l":"provideArrayList(ObjectProvider<E>)","u":"provideArrayList(org.soliscode.test.provider.ObjectProvider)"},{"p":"org.soliscode.test.provider","c":"CollectionProviders","l":"provideHashSet(ObjectProvider<E>)","u":"provideHashSet(org.soliscode.test.provider.ObjectProvider)"},{"p":"org.soliscode.test.provider","c":"CollectionProviders","l":"provideLinkedList(ObjectProvider<E>)","u":"provideLinkedList(org.soliscode.test.provider.ObjectProvider)"},{"p":"org.soliscode.test.breakable","c":"BreakableCollection.WithProvider","l":"provider()"},{"p":"org.soliscode.test.breakable","c":"BreakableIterable.WithProvider","l":"provider()"},{"p":"org.soliscode.test.contract.support","c":"CollectionProviderSupport","l":"provider()"},{"p":"org.soliscode.test.contract.support","c":"IntegerSupport","l":"provider()"},{"p":"org.soliscode.test.contract.support","c":"NumberSupport","l":"provider()"},{"p":"org.soliscode.test.contract.support","c":"ProviderSupport","l":"provider()"},{"p":"org.soliscode.test.contract.support","c":"WithArrayList","l":"provider()"},{"p":"org.soliscode.test.contract.support","c":"WithDouble","l":"provider()"},{"p":"org.soliscode.test.contract.support","c":"WithInteger","l":"provider()"},{"p":"org.soliscode.test.contract.support","c":"WithString","l":"provider()"},{"p":"org.soliscode.test.provider","c":"ObjectProvider","l":"randomInstanceSupplier()"},{"p":"org.soliscode.test.contract","c":"CollectionMethods","l":"Remove"},{"p":"org.soliscode.test.breakable","c":"BreakableCollection","l":"REMOVE_ALL_ALWAYS_RETURNS_FALSE"},{"p":"org.soliscode.test.breakable","c":"BreakableCollection","l":"REMOVE_ALL_ALWAYS_RETURNS_OPPOSITE_VALUE"},{"p":"org.soliscode.test.breakable","c":"BreakableCollection","l":"REMOVE_ALL_ALWAYS_RETURNS_TRUE"},{"p":"org.soliscode.test.breakable","c":"BreakableCollection","l":"REMOVE_ALL_DOES_NOT_REMOVE_ANY_ELEMENTS"},{"p":"org.soliscode.test.breakable","c":"BreakableCollection","l":"REMOVE_ALL_SKIPS_FIRST_ELEMENT"},{"p":"org.soliscode.test.breakable","c":"BreakableCollection","l":"REMOVE_ALL_SKIPS_LAST_ELEMENT"},{"p":"org.soliscode.test.breakable","c":"BreakableCollection","l":"REMOVE_ALWAYS_RETURNS_FALSE"},{"p":"org.soliscode.test.breakable","c":"BreakableCollection","l":"REMOVE_ALWAYS_RETURNS_OPPOSITE_VALUE"},{"p":"org.soliscode.test.breakable","c":"BreakableCollection","l":"REMOVE_ALWAYS_RETURNS_TRUE"},{"p":"org.soliscode.test.breakable","c":"BreakableList","l":"REMOVE_AT_INDEX_ALWAYS_RETURNS_NULL"},{"p":"org.soliscode.test.breakable","c":"BreakableList","l":"REMOVE_AT_INDEX_DOES_NOT_REMOVE_THE_ELEMENT"},{"p":"org.soliscode.test.breakable","c":"BreakableList","l":"REMOVE_AT_INDEX_REMOVES_THE_NEXT_ELEMENT"},{"p":"org.soliscode.test.breakable","c":"BreakableList","l":"REMOVE_AT_INDEX_REMOVES_THE_PREVIOUS_ELEMENT"},{"p":"org.soliscode.test.breakable","c":"BreakableList","l":"REMOVE_AT_INDEX_RETURNS_NULL_ON_BAD_INDEX"},{"p":"org.soliscode.test.breakable","c":"BreakableList","l":"REMOVE_AT_INDEX_THROWS_WRONG_EXCEPTION_ON_BAD_INDEX"},{"p":"org.soliscode.test.breakable","c":"BreakableCollection","l":"REMOVE_DOES_NOT_REMOVE_ELEMENT"},{"p":"org.soliscode.test.breakable","c":"BreakableSequencedCollection","l":"REMOVE_FIRST_ALWAYS_THROWS"},{"p":"org.soliscode.test.breakable","c":"BreakableSequencedCollection","l":"REMOVE_FIRST_DOES_NOT_REMOVE_ELEMENT"},{"p":"org.soliscode.test.breakable","c":"BreakableSequencedCollection","l":"REMOVE_FIRST_RETURNS_NULL"},{"p":"org.soliscode.test.breakable","c":"BreakableCollection","l":"REMOVE_IF_ALWAYS_RETURNS_FALSE"},{"p":"org.soliscode.test.breakable","c":"BreakableCollection","l":"REMOVE_IF_ALWAYS_RETURNS_OPPOSITE_VALUE"},{"p":"org.soliscode.test.breakable","c":"BreakableCollection","l":"REMOVE_IF_ALWAYS_RETURNS_TRUE"},{"p":"org.soliscode.test.breakable","c":"BreakableCollection","l":"REMOVE_IF_DOES_NOT_REMOVE_ANY_ELEMENTS"},{"p":"org.soliscode.test.breakable","c":"BreakableCollection","l":"REMOVE_IF_SKIPS_FIRST_ELEMENT"},{"p":"org.soliscode.test.breakable","c":"BreakableCollection","l":"REMOVE_IF_SKIPS_LAST_ELEMENT"},{"p":"org.soliscode.test.breakable","c":"BreakableSequencedCollection","l":"REMOVE_LAST_ALWAYS_THROWS"},{"p":"org.soliscode.test.breakable","c":"BreakableSequencedCollection","l":"REMOVE_LAST_DOES_NOT_REMOVE_ELEMENT"},{"p":"org.soliscode.test.breakable","c":"BreakableSequencedCollection","l":"REMOVE_LAST_RETURNS_NULL"},{"p":"org.soliscode.test.breakable","c":"BreakableIterator","l":"remove()"},{"p":"org.soliscode.test.breakable","c":"BreakableList","l":"remove(int)"},{"p":"org.soliscode.test.breakable","c":"BreakableCollection","l":"remove(Object)","u":"remove(java.lang.Object)"},{"p":"org.soliscode.test.interfaces","c":"CollectionOnly","l":"remove(Object)","u":"remove(java.lang.Object)"},{"p":"org.soliscode.test.util","c":"IdentitySet","l":"remove(Object)","u":"remove(java.lang.Object)"},{"p":"org.soliscode.test.contract","c":"CollectionMethods","l":"RemoveAll"},{"p":"org.soliscode.test.breakable","c":"BreakableCollection","l":"removeAll(Collection<?>)","u":"removeAll(java.util.Collection)"},{"p":"org.soliscode.test.interfaces","c":"CollectionOnly","l":"removeAll(Collection<?>)","u":"removeAll(java.util.Collection)"},{"p":"org.soliscode.test.util","c":"CollectionTestOps","l":"removeAllByIdentity(Collection<E>, Collection<?>)","u":"removeAllByIdentity(java.util.Collection,java.util.Collection)"},{"p":"org.soliscode.test.contract","c":"CollectionMethods","l":"RemoveAtIndex"},{"p":"org.soliscode.test.contract","c":"CollectionMethods","l":"RemoveFirst"},{"p":"org.soliscode.test.breakable","c":"BreakableSequencedCollection","l":"removeFirst()"},{"p":"org.soliscode.test.contract","c":"CollectionMethods","l":"RemoveIf"},{"p":"org.soliscode.test.breakable","c":"BreakableCollection","l":"removeIf(Predicate<? super E>)","u":"removeIf(java.util.function.Predicate)"},{"p":"org.soliscode.test.contract","c":"CollectionMethods","l":"RemoveLast"},{"p":"org.soliscode.test.breakable","c":"BreakableSequencedCollection","l":"removeLast()"},{"p":"org.soliscode.test.breakable","c":"BreakableList","l":"REPLACE_ALL_DOES_NOT_REPLACE_ELEMENTS"},{"p":"org.soliscode.test.breakable","c":"BreakableList","l":"REPLACE_ALL_SKIPS_FIRST_ELEMENT"},{"p":"org.soliscode.test.breakable","c":"BreakableList","l":"REPLACE_ALL_SKIPS_LAST_ELEMENT"},{"p":"org.soliscode.test.contract","c":"CollectionMethods","l":"ReplaceAll"},{"p":"org.soliscode.test.breakable","c":"BreakableList","l":"replaceAll(UnaryOperator<E>)","u":"replaceAll(java.util.function.UnaryOperator)"},{"p":"org.soliscode.test.breakable","c":"BreakableCollection","l":"RETAIN_ALL_ALWAYS_RETURNS_FALSE"},{"p":"org.soliscode.test.breakable","c":"BreakableCollection","l":"RETAIN_ALL_ALWAYS_RETURNS_OPPOSITE_VALUE"},{"p":"org.soliscode.test.breakable","c":"BreakableCollection","l":"RETAIN_ALL_ALWAYS_RETURNS_TRUE"},{"p":"org.soliscode.test.breakable","c":"BreakableCollection","l":"RETAIN_ALL_DOES_NOT_RETAIN_ANY_ELEMENTS"},{"p":"org.soliscode.test.breakable","c":"BreakableCollection","l":"RETAIN_ALL_SKIPS_FIRST_ELEMENT"},{"p":"org.soliscode.test.breakable","c":"BreakableCollection","l":"RETAIN_ALL_SKIPS_LAST_ELEMENT"},{"p":"org.soliscode.test.contract","c":"CollectionMethods","l":"RetainAll"},{"p":"org.soliscode.test.breakable","c":"BreakableCollection","l":"retainAll(Collection<?>)","u":"retainAll(java.util.Collection)"},{"p":"org.soliscode.test.interfaces","c":"CollectionOnly","l":"retainAll(Collection<?>)","u":"retainAll(java.util.Collection)"},{"p":"org.soliscode.test.contract","c":"CollectionMethods","l":"Reversed"},{"p":"org.soliscode.test.breakable","c":"BreakableSequencedCollection","l":"REVERSED_DOES_NOT_REVERSE_COLLECTION"},{"p":"org.soliscode.test.breakable","c":"BreakableSequencedCollection","l":"REVERSED_MODIFIES_THE_COLLECTION"},{"p":"org.soliscode.test.breakable","c":"BreakableList","l":"reversed()"},{"p":"org.soliscode.test.breakable","c":"BreakableSequencedCollection","l":"reversed()"},{"p":"org.soliscode.test.breakable","c":"BreakableCollection.Builder","l":"self()"},{"p":"org.soliscode.test.breakable","c":"BreakableIterable.AbstractBuilder","l":"self()"},{"p":"org.soliscode.test.breakable","c":"BreakableIterable.Builder","l":"self()"},{"p":"org.soliscode.test.breakable","c":"BreakableSequencedCollection.Builder","l":"self()"},{"p":"org.soliscode.test.contract","c":"CollectionMethods","l":"Set"},{"p":"org.soliscode.test.breakable","c":"BreakableList","l":"SET_ALWAYS_RETURNS_NULL"},{"p":"org.soliscode.test.breakable","c":"BreakableList","l":"SET_CHANGES_THE_NEXT_ELEMENT"},{"p":"org.soliscode.test.breakable","c":"BreakableList","l":"SET_CHANGES_THE_PREVIOUS_ELEMENT"},{"p":"org.soliscode.test.breakable","c":"BreakableList","l":"SET_DOES_NOT_CHANGE_THE_ELEMENT"},{"p":"org.soliscode.test.breakable","c":"BreakableList","l":"SET_RETURNS_NULL_ON_BAD_INDEX"},{"p":"org.soliscode.test.breakable","c":"BreakableList","l":"SET_THROWS_WRONG_EXCEPTION_ON_BAD_INDEX"},{"p":"org.soliscode.test.breakable","c":"BreakableList","l":"set(int, E)","u":"set(int,E)"},{"p":"org.soliscode.test.breakable","c":"BreakableIterable.AbstractBuilder","l":"setCharacteristics(int)"},{"p":"org.soliscode.test.breakable","c":"BreakableCollection","l":"setPermitsDuplicates(boolean)"},{"p":"org.soliscode.test.breakable","c":"BreakableCollection","l":"setPermitsIncompatibleTypes(boolean)"},{"p":"org.soliscode.test.breakable","c":"BreakableCollection","l":"setPermitsNulls(boolean)"},{"p":"org.soliscode.test.provider","c":"Providers","l":"shortProvider()"},{"p":"org.soliscode.test.provider","c":"ShortProvider","l":"ShortProvider()","u":"%3Cinit%3E()"},{"p":"org.soliscode.test.breakable","c":"BreakableCollection","l":"SIZE_ALWAYS_RETURNS_CONSTANT_VALUE"},{"p":"org.soliscode.test.breakable","c":"BreakableCollection","l":"SIZE_ALWAYS_RETURNS_ZERO"},{"p":"org.soliscode.test.breakable","c":"BreakableCollection","l":"size()"},{"p":"org.soliscode.test.interfaces","c":"CollectionOnly","l":"size()"},{"p":"org.soliscode.test.util","c":"IdentitySet","l":"size()"},{"p":"org.soliscode.test.util","c":"IterableTestOps","l":"size(Iterable<?>)","u":"size(java.lang.Iterable)"},{"p":"org.soliscode.test.util","c":"IterableTestOps","l":"skipFirstIterator(Iterable<E>)","u":"skipFirstIterator(java.lang.Iterable)"},{"p":"org.soliscode.test.util","c":"IterableTestOps","l":"skipLastIterator(Iterable<E>)","u":"skipLastIterator(java.lang.Iterable)"},{"p":"org.soliscode.test.contract","c":"CollectionMethods","l":"Sort"},{"p":"org.soliscode.test.breakable","c":"BreakableList","l":"SORT_DOES_NOT_SORT_THE_ELEMENTS"},{"p":"org.soliscode.test.breakable","c":"BreakableList","l":"SORT_REVERSES_THE_ORDER"},{"p":"org.soliscode.test.breakable","c":"BreakableList","l":"SORT_THROWS_ON_NULL_ARGUMENT"},{"p":"org.soliscode.test.breakable","c":"BreakableList","l":"sort(Comparator<? super E>)","u":"sort(java.util.Comparator)"},{"p":"org.soliscode.test.breakable","c":"BreakableSpliterator","l":"SPLITERATOR_CHARACTERISTICS_ALWAYS_RETURNS_ZERO"},{"p":"org.soliscode.test.breakable","c":"BreakableSpliterator","l":"SPLITERATOR_ESTIMATE_SIZE_ALWAYS_RETURNS_MAX_VALUE"},{"p":"org.soliscode.test.breakable","c":"BreakableSpliterator","l":"SPLITERATOR_ESTIMATE_SIZE_ALWAYS_RETURNS_ZERO"},{"p":"org.soliscode.test.breakable","c":"BreakableSpliterator","l":"SPLITERATOR_FOR_EACH_REMAINING_DOES_NOT_CALL_ACTION"},{"p":"org.soliscode.test.breakable","c":"BreakableSpliterator","l":"SPLITERATOR_GET_COMPARATOR_ALWAYS_RETURNS_NULL"},{"p":"org.soliscode.test.breakable","c":"BreakableSpliterator","l":"SPLITERATOR_GET_EXACT_SIZE_IF_KNOWN_ALWAYS_RETURNS_NEGATIVE_ONE"},{"p":"org.soliscode.test.breakable","c":"BreakableSpliterator","l":"SPLITERATOR_HAS_CHARACTERISTIC_ALWAYS_RETURNS_FALSE"},{"p":"org.soliscode.test.breakable","c":"BreakableSpliterator","l":"SPLITERATOR_HAS_CHARACTERISTIC_ALWAYS_RETURNS_TRUE"},{"p":"org.soliscode.test.breakable","c":"BreakableSpliterator","l":"SPLITERATOR_IS_ALWAYS_EMPTY"},{"p":"org.soliscode.test.breakable","c":"BreakableSpliterator","l":"SPLITERATOR_SKIPS_FIRST_ELEMENT"},{"p":"org.soliscode.test.breakable","c":"BreakableSpliterator","l":"SPLITERATOR_TRY_ADVANCE_ALWAYS_RETURNS_FALSE"},{"p":"org.soliscode.test.breakable","c":"BreakableSpliterator","l":"SPLITERATOR_TRY_ADVANCE_ALWAYS_RETURNS_TRUE"},{"p":"org.soliscode.test.breakable","c":"BreakableSpliterator","l":"SPLITERATOR_TRY_ADVANCE_DOES_NOT_CALL_ACTION"},{"p":"org.soliscode.test.breakable","c":"BreakableSpliterator","l":"SPLITERATOR_TRY_SPLIT_ALWAYS_RETURNS_NULL"},{"p":"org.soliscode.test.breakable","c":"BreakableIterable","l":"spliterator()"},{"p":"org.soliscode.test.interfaces","c":"IterableOnly","l":"spliterator()"},{"p":"org.soliscode.test.contract","c":"CollectionMethods","l":"Stream"},{"p":"org.soliscode.test.provider","c":"Providers","l":"stringProvider()"},{"p":"org.soliscode.test.provider","c":"StringProvider","l":"StringProvider()","u":"%3Cinit%3E()"},{"p":"org.soliscode.test.breakable","c":"BreakableList","l":"subList(int, int)","u":"subList(int,int)"},{"p":"org.soliscode.test","c":"OptionalMethodSupport","l":"supportsMethod(OptionalMethod)","u":"supportsMethod(org.soliscode.test.OptionalMethod)"},{"p":"org.soliscode.test.contract.collection","c":"CollectionContract","l":"supportsMethod(OptionalMethod)","u":"supportsMethod(org.soliscode.test.OptionalMethod)"},{"p":"org.soliscode.test","c":"SupportedMethods","l":"supportsMethod(OptionalMethod)","u":"supportsMethod(org.soliscode.test.OptionalMethod)"},{"p":"org.soliscode.test.contract.collection","c":"AddContract","l":"testAdd()"},{"p":"org.soliscode.test.contract.list","c":"ListAddContract","l":"testAdd()"},{"p":"org.soliscode.test.contract.collection","c":"AddAllContract","l":"testAddAllToContainer()"},{"p":"org.soliscode.test.contract.collection","c":"AddAllContract","l":"testAddAllWithDuplicateValue()"},{"p":"org.soliscode.test.contract.collection","c":"AddAllContract","l":"testAddAllWithNullValue()"},{"p":"org.soliscode.test.contract.sequenced","c":"AddFirstContract","l":"testAddFirst()"},{"p":"org.soliscode.test.contract.sequenced","c":"AddFirstContract","l":"testAddFirstWithNullValue()"},{"p":"org.soliscode.test.contract.sequenced","c":"AddLastContract","l":"testAddLast()"},{"p":"org.soliscode.test.contract.sequenced","c":"AddLastContract","l":"testAddLastWithNullValue()"},{"p":"org.soliscode.test.contract.collection","c":"AddContract","l":"testAddWithNullValue()"},{"p":"org.soliscode.test.contract.collection","c":"ClearContract","l":"testClearOnCollectionWithElements()"},{"p":"org.soliscode.test.contract.collection","c":"ClearContract","l":"testClearOnEmptyCollection()"},{"p":"org.soliscode.test.contract.collection","c":"ContainsAllContract","l":"testContainsAllOnCollectionWithElements()"},{"p":"org.soliscode.test.contract.collection","c":"ContainsAllContract","l":"testContainsAllOnCollectionWithNulls()"},{"p":"org.soliscode.test.contract.collection","c":"ContainsAllContract","l":"testContainsAllOnEmptyCollection()"},{"p":"org.soliscode.test.contract.collection","c":"ContainsAllContract","l":"testContainsAllWithIncompatibleType()"},{"p":"org.soliscode.test.contract.collection","c":"ContainsContract","l":"testContainsOnCollectionWithElements()"},{"p":"org.soliscode.test.contract.collection","c":"ContainsContract","l":"testContainsOnCollectionWithNulls()"},{"p":"org.soliscode.test.contract.collection","c":"ContainsContract","l":"testContainsOnEmptyCollection()"},{"p":"org.soliscode.test.contract.collection","c":"ContainsContract","l":"testContainsWithIncompatibleType()"},{"p":"org.soliscode.test.contract.numeric","c":"IntegerContract","l":"testDoubleValue()"},{"p":"org.soliscode.test.contract.object","c":"EqualsContract","l":"testEqualsForNullValue()"},{"p":"org.soliscode.test.contract.object","c":"EqualsContract","l":"testEqualsIsConsistent()"},{"p":"org.soliscode.test.contract.object","c":"EqualsContract","l":"testEqualsIsReflexive()"},{"p":"org.soliscode.test.contract.object","c":"EqualsContract","l":"testEqualsIsSymmetric()"},{"p":"org.soliscode.test.contract.object","c":"EqualsContract","l":"testEqualsIsTransitive()"},{"p":"org.soliscode.test.contract.numeric","c":"IntegerContract","l":"testFloatValue()"},{"p":"org.soliscode.test.contract.iterable","c":"ForEachContract","l":"testForEachForEmptyCollection()"},{"p":"org.soliscode.test.contract.iterable","c":"IteratorContract","l":"testForEachRemainingForNullAction()"},{"p":"org.soliscode.test.contract.iterable","c":"IteratorContract","l":"testForEachRemainingOverEntireCollection()"},{"p":"org.soliscode.test.contract.iterable","c":"IteratorContract","l":"testForEachRemainingOverPartialCollection()"},{"p":"org.soliscode.test.contract.iterable","c":"ForEachContract","l":"testForEachWithNullAction()"},{"p":"org.soliscode.test.contract.iterable","c":"ForEachContract","l":"testForeEachOverCollectionWithElements()"},{"p":"org.soliscode.test.contract.list","c":"GetContract","l":"testGet()"},{"p":"org.soliscode.test.contract.sequenced","c":"GetFirstContract","l":"testGetFirst()"},{"p":"org.soliscode.test.contract.sequenced","c":"GetFirstContract","l":"testGetFirstOnEmptyCollection()"},{"p":"org.soliscode.test.contract.sequenced","c":"GetLastContract","l":"testGetLast()"},{"p":"org.soliscode.test.contract.sequenced","c":"GetLastContract","l":"testGetLastOnEmptyCollection()"},{"p":"org.soliscode.test.contract.list","c":"GetContract","l":"testGetThrowsForInvalidIndex()"},{"p":"org.soliscode.test.contract.list","c":"GetContract","l":"testGetWithEmptyCollection()"},{"p":"org.soliscode.test.contract.iterable","c":"SpliteratorContract","l":"testHasCharacteristic()"},{"p":"org.soliscode.test.contract.object","c":"HashCodeContract","l":"testHashCodeDistribution()"},{"p":"org.soliscode.test.contract.object","c":"HashCodeContract","l":"testHashCodeIsStable()"},{"p":"org.soliscode.test.contract.object","c":"HashCodeContract","l":"testHashCodeWithEqualValues()"},{"p":"org.soliscode.test.contract.object","c":"HashCodeContract","l":"testHashDifferentValues()"},{"p":"org.soliscode.test.contract.list","c":"IndexOfContract","l":"testIndexOf()"},{"p":"org.soliscode.test.contract.list","c":"IndexOfContract","l":"testIndexOfWithEmptyCollection()"},{"p":"org.soliscode.test.contract.list","c":"IndexOfContract","l":"testIndexOfWithIncompatibleType()"},{"p":"org.soliscode.test.contract.list","c":"IndexOfContract","l":"testIndexOfWithNullValue()"},{"p":"org.soliscode.test.contract.numeric","c":"IntegerContract","l":"testIntValue()"},{"p":"org.soliscode.test.contract.collection","c":"IsEmptyContract","l":"testIsEmptyForEmptyCollection()"},{"p":"org.soliscode.test.contract.collection","c":"IsEmptyContract","l":"testIsEmptyForNonEmptyCollection()"},{"p":"org.soliscode.test.contract.iterable","c":"IteratorContract","l":"testIteratorOverCollectionWithElements()"},{"p":"org.soliscode.test.contract.iterable","c":"IteratorContract","l":"testIteratorOverEmptyCollection()"},{"p":"org.soliscode.test.contract.iterable","c":"IteratorContract","l":"testIteratorRemove()"},{"p":"org.soliscode.test.contract.iterable","c":"IteratorContract","l":"testIteratorRemoveThrowsOnIllegalState()"},{"p":"org.soliscode.test.contract.numeric","c":"IntegerContract","l":"testLongValue()"},{"p":"org.soliscode.test.contract.collection","c":"StreamContract","l":"testParallelStreamForCollectionWithElements()"},{"p":"org.soliscode.test.contract.collection","c":"StreamContract","l":"testParallelStreamForEmptyCollection()"},{"p":"org.soliscode.test.contract.collection","c":"RemoveAllContract","l":"testRemoveAllOnContainerWithElements()"},{"p":"org.soliscode.test.contract.collection","c":"RemoveAllContract","l":"testRemoveAllOnEmptyContainer()"},{"p":"org.soliscode.test.contract.collection","c":"RemoveAllContract","l":"testRemoveAllOnIncompatibleObject()"},{"p":"org.soliscode.test.contract.collection","c":"RemoveAllContract","l":"testRemoveAllOnNullElement()"},{"p":"org.soliscode.test.contract.collection","c":"RemoveAllContract","l":"testRemoveAllThrowsOnNullCollection()"},{"p":"org.soliscode.test.contract.sequenced","c":"RemoveFirstContract","l":"testRemoveFirst()"},{"p":"org.soliscode.test.contract.sequenced","c":"RemoveFirstContract","l":"testRemoveFirstOnEmptyCollection()"},{"p":"org.soliscode.test.contract.collection","c":"RemoveIfContract","l":"testRemoveIfOnContainerWithElements()"},{"p":"org.soliscode.test.contract.collection","c":"RemoveIfContract","l":"testRemoveIfOnEmptyContainer()"},{"p":"org.soliscode.test.contract.collection","c":"RemoveIfContract","l":"testRemoveIfThrowsOnANullFilter()"},{"p":"org.soliscode.test.contract.sequenced","c":"RemoveLastContract","l":"testRemoveLast()"},{"p":"org.soliscode.test.contract.sequenced","c":"RemoveLastContract","l":"testRemoveLastOnEmptyCollection()"},{"p":"org.soliscode.test.contract.collection","c":"RemoveContract","l":"testRemoveOnContainerWithElements()"},{"p":"org.soliscode.test.contract.collection","c":"RemoveContract","l":"testRemoveOnContainerWithNulls()"},{"p":"org.soliscode.test.contract.collection","c":"RemoveContract","l":"testRemoveOnEmptyContainer()"},{"p":"org.soliscode.test.contract.collection","c":"RemoveContract","l":"testRemoveOnIncompatibleObject()"},{"p":"org.soliscode.test.contract.collection","c":"RetainAllContract","l":"testRetainAllOnContainerWithElements()"},{"p":"org.soliscode.test.contract.collection","c":"RetainAllContract","l":"testRetainAllOnEmptyContainer()"},{"p":"org.soliscode.test.contract.collection","c":"RetainAllContract","l":"testRetainAllOnIncompatibleObject()"},{"p":"org.soliscode.test.contract.collection","c":"RetainAllContract","l":"testRetainAllThrowsOnNullCollection()"},{"p":"org.soliscode.test.contract.sequenced","c":"ReversedContract","l":"testReversed()"},{"p":"org.soliscode.test.contract.list","c":"SetContract","l":"testSet()"},{"p":"org.soliscode.test.contract.list","c":"SetContract","l":"testSetThrowsForInvalidIndex()"},{"p":"org.soliscode.test.contract.list","c":"SetContract","l":"testSetWithEmptyCollection()"},{"p":"org.soliscode.test.contract.list","c":"SetContract","l":"testSetWithNullElement()"},{"p":"org.soliscode.test.contract.collection","c":"SizeContract","l":"testSizeOnCollectionWithElements()"},{"p":"org.soliscode.test.contract.collection","c":"SizeContract","l":"testSizeOnEmptyCollection()"},{"p":"org.soliscode.test.contract.iterable","c":"SpliteratorContract","l":"testSpliteratorEstimateSizeOnACollectionWithElements()"},{"p":"org.soliscode.test.contract.iterable","c":"SpliteratorContract","l":"testSpliteratorEstimateSizeOnAnEmptyCollection()"},{"p":"org.soliscode.test.contract.iterable","c":"SpliteratorContract","l":"testSpliteratorForEachRemainingOnACollectionWithElements()"},{"p":"org.soliscode.test.contract.iterable","c":"SpliteratorContract","l":"testSpliteratorForEachRemainingOnAnEmptyCollection()"},{"p":"org.soliscode.test.contract.iterable","c":"SpliteratorContract","l":"testSpliteratorGetExactSizeIfKnownOnACollectionWithElements()"},{"p":"org.soliscode.test.contract.iterable","c":"SpliteratorContract","l":"testSpliteratorGetExactSizeIfKnownOnAnEmptyCollection()"},{"p":"org.soliscode.test.contract.iterable","c":"SpliteratorContract","l":"testSpliteratorTryAdvanceOnACollectionWithElements()"},{"p":"org.soliscode.test.contract.iterable","c":"SpliteratorContract","l":"testSpliteratorTryAdvanceOnAnEmptyCollection()"},{"p":"org.soliscode.test.contract.iterable","c":"SpliteratorContract","l":"testSpliteratorTrySplitOnACollectionWithElements()"},{"p":"org.soliscode.test.contract.iterable","c":"SpliteratorContract","l":"testSpliteratorTrySplitOnAnEmptyCollection()"},{"p":"org.soliscode.test.contract.collection","c":"StreamContract","l":"testStreamForCollectionWithElements()"},{"p":"org.soliscode.test.contract.collection","c":"StreamContract","l":"testStreamForEmptyCollection()"},{"p":"org.soliscode.test.contract.collection","c":"ToArrayContract","l":"testToArray()"},{"p":"org.soliscode.test.contract.list","c":"ListToArrayContract","l":"testToArray()"},{"p":"org.soliscode.test.contract.collection","c":"ToArrayContract","l":"testToArrayIsSafe()"},{"p":"org.soliscode.test.contract.list","c":"ListToArrayContract","l":"testToArrayIsSafe()"},{"p":"org.soliscode.test.contract.collection","c":"ToArrayContract","l":"testToArrayOnEmptyCollection()"},{"p":"org.soliscode.test.contract.collection","c":"ToArrayContract","l":"testToArrayStore()"},{"p":"org.soliscode.test.contract.collection","c":"ToArrayContract","l":"testToArrayStoreOnEmptyCollection()"},{"p":"org.soliscode.test.contract.collection","c":"ToArrayContract","l":"testToArrayStoreThrowsOnNullArray()"},{"p":"org.soliscode.test.contract.object","c":"ToStringContract","l":"testToStringForDifferentValues()"},{"p":"org.soliscode.test.contract.object","c":"ToStringContract","l":"testToStringForEqualValues()"},{"p":"org.soliscode.test.contract.object","c":"ToStringContract","l":"testToStringIsConsistent()"},{"p":"org.soliscode.test.contract.object","c":"ToStringContract","l":"testToStringOverridden()"},{"p":"org.soliscode.test.breakable","c":"BreakableCollection","l":"TO_ARRAY_MISSING_FIRST_ELEMENT"},{"p":"org.soliscode.test.breakable","c":"BreakableCollection","l":"TO_ARRAY_MISSING_LAST_ELEMENT"},{"p":"org.soliscode.test.breakable","c":"BreakableCollection","l":"TO_ARRAY_RETURNS_EMPTY_ARRAY"},{"p":"org.soliscode.test.breakable","c":"BreakableCollection","l":"TO_ARRAY_RETURNS_NULL"},{"p":"org.soliscode.test.breakable","c":"BreakableCollection","l":"TO_ARRAY_STORE_DOES_NOT_COPY_ELEMENTS"},{"p":"org.soliscode.test.breakable","c":"BreakableCollection","l":"TO_ARRAY_STORE_MISSING_FIRST_ELEMENT"},{"p":"org.soliscode.test.breakable","c":"BreakableCollection","l":"TO_ARRAY_STORE_MISSING_LAST_ELEMENT"},{"p":"org.soliscode.test.breakable","c":"BreakableCollection","l":"TO_ARRAY_STORE_RETURNS_EMPTY_ARRAY"},{"p":"org.soliscode.test.breakable","c":"BreakableCollection","l":"TO_ARRAY_STORE_RETURNS_NULL"},{"p":"org.soliscode.test.breakable","c":"BreakableCollection","l":"toArray()"},{"p":"org.soliscode.test.interfaces","c":"CollectionOnly","l":"toArray()"},{"p":"org.soliscode.test.breakable","c":"BreakableCollection","l":"toArray(T[])"},{"p":"org.soliscode.test.interfaces","c":"CollectionOnly","l":"toArray(T[])"},{"p":"org.soliscode.test.util","c":"CollectionTestOps","l":"toCSVString(Collection<?>)","u":"toCSVString(java.util.Collection)"},{"p":"org.soliscode.test.util","c":"CollectingConsumer","l":"toList()"},{"p":"org.soliscode.test.util","c":"CollectingConsumer","l":"toSet()"},{"p":"org.soliscode.test.contract.object","c":"ObjectMethods","l":"ToString"},{"p":"org.soliscode.test.breakable","c":"Break","l":"toString()"},{"p":"org.soliscode.test.breakable","c":"BreakableIterable","l":"toString()"},{"p":"org.soliscode.test.interfaces","c":"CollectionOnly","l":"toString()"},{"p":"org.soliscode.test.interfaces","c":"IterableOnly","l":"toString()"},{"p":"org.soliscode.test.interfaces","c":"NumberOnly","l":"toString()"},{"p":"org.soliscode.test.interfaces","c":"ObjectOnly","l":"toString()"},{"p":"org.soliscode.test.util","c":"AlwaysThrows","l":"toString()"},{"p":"org.soliscode.test.util","c":"UncachedInteger","l":"toString()"},{"p":"org.soliscode.test.breakable","c":"BreakableSpliterator","l":"tryAdvance(Consumer<? super E>)","u":"tryAdvance(java.util.function.Consumer)"},{"p":"org.soliscode.test.breakable","c":"BreakableSpliterator","l":"trySplit()"},{"p":"org.soliscode.test.breakable","c":"BreakableCollection","l":"unbroken()"},{"p":"org.soliscode.test.breakable","c":"BreakableIterable","l":"unbroken()"},{"p":"org.soliscode.test.util","c":"UncachedInteger","l":"UncachedInteger()","u":"%3Cinit%3E()"},{"p":"org.soliscode.test.util","c":"UncachedInteger","l":"UncachedInteger(int)","u":"%3Cinit%3E(int)"},{"p":"org.soliscode.test.util","c":"UncachedInteger","l":"UncachedInteger(UncachedInteger)","u":"%3Cinit%3E(org.soliscode.test.util.UncachedInteger)"},{"p":"org.soliscode.test.provider","c":"ObjectProvider","l":"uniqueInstanceSupplier()"},{"p":"org.soliscode.test.provider","c":"ObjectProvider","l":"uniqueInstanceSupplier(int)"},{"p":"org.soliscode.test.provider","c":"ObjectProvider","l":"uniqueSizeLimit()"},{"p":"org.soliscode.test.breakable","c":"BreakableCollection.AbstractBuilder","l":"unsupportedMethods"},{"p":"org.soliscode.test.breakable","c":"BreakableIterable.AbstractBuilder","l":"unsupportedMethods"},{"p":"org.soliscode.test","c":"OptionalMethodSupport","l":"unsupportedMethods()"},{"p":"org.soliscode.test.util","c":"UncachedInteger","l":"valueOf(int)"},{"p":"org.soliscode.test.contract","c":"CollectionMethods","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.soliscode.test.contract.object","c":"ObjectMethods","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.soliscode.test.contract","c":"CollectionMethods","l":"values()"},{"p":"org.soliscode.test.contract.object","c":"ObjectMethods","l":"values()"},{"p":"org.soliscode.test.provider","c":"CollectionProviders","l":"wrap(CollectionProvider<E, C>, Function<C, W>)","u":"wrap(org.soliscode.test.provider.CollectionProvider,java.util.function.Function)"}];updateSearchResults();