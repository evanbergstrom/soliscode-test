# .gitlab-ci.yml
stages: [build, test, release, publish]

default:
  image: maven:3.9.9-eclipse-temurin-23
  cache:
    key: maven-repo
    paths:
      - .m2/repository
  before_script:
    - java -version
    - mvn -v

build:
  stage: build
  script:
    - mvn -B -q -DskipTests package

test:
  stage: test
  script:
    - mvn -B -q verify

release:
  stage: release
  image: node:20
  needs: ["test"]
  variables:
    GIT_DEPTH: "0"    # full history + tags for semantic-release
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
      when: manual     # show Play button; do not auto-run
      allow_failure: false
    - when: never      # hide on all other branches/sources
  before_script:
    - npm -v
    - npm i -g semantic-release @semantic-release/{gitlab,git,exec,changelog,commit-analyzer,release-notes-generator}
  script:
    - semantic-release

publish:
  stage: publish
  image: maven:3.9.9-eclipse-temurin-23
  needs: [ "release" ]
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
      when: manual
    - when: never
  before_script:
    # Import private key from CI variable
    - echo "$GPG_PRIVATE_KEY_ARMOR" | base64 -d > /tmp/private.key
    - gpg --batch --import /tmp/private.key
    - rm -f /tmp/private.key
    # Non-interactive gpg setup
    - mkdir -p ~/.gnupg
    - echo "pinentry-mode loopback" >> ~/.gnupg/gpg.conf
    - echo "allow-loopback-pinentry" >> ~/.gnupg/gpg-agent.conf
    - export GPG_TTY=$(tty)
  script:
    # Use your Maven settings that contain Sonatype 'central' credentials
    - mvn -B -q -s .mvn/settings.xml -Dgpg.passphrase="$GPG_PASSPHRASE" deploy
